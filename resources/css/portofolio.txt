app:
filament:-ressorces-blogpostresurces
                    createblog post-<?php

namespace App\Filament\Resources\BlogPostResource\Pages;

use App\Filament\Resources\BlogPostResource;
use Filament\Actions;
use Filament\Resources\Pages\CreateRecord;

class CreateBlogPost extends CreateRecord
{
    protected static string $resource = BlogPostResource::class;
}
EditBlogPost.php  <?php

namespace App\Filament\Resources\BlogPostResource\Pages;

use App\Filament\Resources\BlogPostResource;
use Filament\Actions;
use Filament\Resources\Pages\EditRecord;

class EditBlogPost extends EditRecord
{
    protected static string $resource = BlogPostResource::class;

    protected function getHeaderActions(): array
    {
        return [
            Actions\DeleteAction::make(),
        ];
    }
}
ListBlogPosts.php   <?php

namespace App\Filament\Resources\BlogPostResource\Pages;

use App\Filament\Resources\BlogPostResource;
use Filament\Actions;
use Filament\Resources\Pages\ListRecords;

class ListBlogPosts extends ListRecords
{
    protected static string $resource = BlogPostResource::class;

    protected function getHeaderActions(): array
    {
        return [
            Actions\CreateAction::make(),
        ];
    }
}
manageBlogpost.php<?php

namespace App\Filament\Resources\BlogPostResource\Pages;

use App\Filament\Resources\BlogPostResource;
use Filament\Actions;
use Filament\Resources\Pages\ManageRecords;

class ManageBlogPosts extends ManageRecords
{
    protected static string $resource = BlogPostResource::class;

    protected function getHeaderActions(): array
    {
        return [
            Actions\CreateAction::make(),
        ];
    }
}
BlogPostResource.php<?php

namespace App\Filament\Resources;

use App\Filament\Resources\BlogPostResource\Pages;
use App\Models\BlogPost;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Support\Str;
use Filament\Forms\Set;
use Filament\Forms\Get;
use Filament\Tables\Columns\ImageColumn;
use Filament\Tables\Columns\ToggleColumn;
use Filament\Tables\Columns\TextColumn;
use Filament\Forms\Components\Section;
use Filament\Forms\Components\Grid;
use Filament\Forms\Components\Group;
use Filament\Forms\Components\SpatieMediaLibraryFileUpload;
use Filament\Tables\Filters\SelectFilter;
use Filament\Tables\Filters\Filter;
use Illuminate\Database\Eloquent\Builder;
use Filament\Tables\Actions\Action;
use Filament\Tables\Actions\ActionGroup;
use Filament\Notifications\Notification;

class BlogPostResource extends Resource
{
    protected static ?string $model = BlogPost::class;

    protected static ?string $navigationIcon = 'heroicon-o-newspaper';
    protected static ?string $navigationGroup = 'Content';
    protected static ?int $navigationSort = 1;

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Group::make()
                    ->schema([
                        Section::make(__('blog.form_content_section'))
                            ->schema([
                                Forms\Components\TextInput::make('title')
                                    ->label(__('blog.title_label'))
                                    ->required()
                                    ->maxLength(255)
                                    ->live(debounce: 500)
                                    ->afterStateUpdated(function (Set $set, ?string $state) {
                                        $set('slug', Str::slug($state));
                                    }),
                                    
                                Forms\Components\TextInput::make('slug')
                                    ->label(__('blog.slug_label'))
                                    ->required()
                                    ->maxLength(255)
                                    ->unique(ignoreRecord: true),
                                    
                                Forms\Components\RichEditor::make('content')
                                    ->label(__('blog.content_label'))
                                    ->required()
                                    ->columnSpanFull()
                                    ->fileAttachmentsDirectory('blog/images')
                                    ->fileAttachmentsVisibility('public'),
                                    
                                Forms\Components\Textarea::make('excerpt')
                                    ->label(__('blog.excerpt_label'))
                                    ->maxLength(65535)
                                    ->columnSpanFull()
                                    ->helperText(__('blog.excerpt_helper')),
                            ]),
                            
                        Section::make(__('blog.seo_meta_section'))
                            ->schema([
                                Forms\Components\Textarea::make('meta_description')
                                    ->label(__('blog.meta_description_label'))
                                    ->maxLength(160)
                                    ->helperText(__('blog.meta_description_helper')),
                                    
                                Forms\Components\TagsInput::make('meta_keywords')
                                    ->label(__('blog.meta_keywords_label'))
                                    ->placeholder(__('blog.meta_keywords_placeholder'))
                                    ->helperText(__('blog.meta_keywords_helper')),
                            ]),
                    ])
                    ->columnSpan(['lg' => 2]),
                    
                Group::make()
                    ->schema([
                        Section::make(__('blog.publishing_section'))
                            ->schema([
                                Forms\Components\FileUpload::make('featured_image')
                                    ->label(__('blog.featured_image_label'))
                                    ->image()
                                    ->directory('blog/featured')
                                    ->maxSize(2048)
                                    ->imageResizeMode('cover')
                                    ->imageCropAspectRatio('16:9')
                                    ->imageResizeTargetWidth('1200')
                                    ->imageResizeTargetHeight('675'),
                                    
                                Forms\Components\Toggle::make('is_published')
                                    ->label(__('blog.is_published_label'))
                                    ->helperText(__('blog.is_published_helper')),
                                    
                                Forms\Components\DateTimePicker::make('published_at')
                                    ->label(__('blog.published_at_label'))
                                    ->default(now())
                                    ->helperText(__('blog.published_at_helper')),
                            ]),
                            
                        Section::make(__('blog.author_section'))
                            ->schema([
                                Forms\Components\Select::make('user_id')
                                    ->label(__('blog.author_label'))
                                    ->relationship('user', 'name')
                                    ->default(auth()->id())
                                    ->required(),
                            ]),
                    ])
                    ->columnSpan(['lg' => 1]),
            ])
            ->columns(3);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                ImageColumn::make('featured_image')
                    ->label(__('blog.image_column'))
                    ->circular()
                    ->size(50),
                    
                TextColumn::make('title')
                    ->label(__('blog.title_column'))
                    ->searchable()
                    ->limit(50)
                    ->tooltip(function (BlogPost $record): string {
                        return $record->title;
                    }),
                    
                TextColumn::make('user.name')
                    ->label(__('blog.author_column'))
                    ->sortable()
                    ->toggleable(),
                    
                ToggleColumn::make('is_published')
                    ->label(__('blog.published_column'))
                    ->sortable(),
                    
                TextColumn::make('published_at')
                    ->label(__('blog.published_at_column'))
                    ->dateTime()
                    ->sortable()
                    ->toggleable(),
                    
                TextColumn::make('reading_time')
                    ->label(__('blog.reading_time_column'))
                    ->suffix(' min')
                    ->toggleable(),
                    
                TextColumn::make('created_at')
                    ->label(__('blog.created_at_column'))
                    ->dateTime()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
            ])
            ->filters([
                SelectFilter::make('is_published')
                    ->label(__('blog.status_filter'))
                    ->options([
                        true => __('blog.published_option'),
                        false => __('blog.draft_option'),
                    ]),
                    
                Filter::make('published_at')
                    ->label(__('blog.date_filter'))
                    ->form([
                        Forms\Components\DatePicker::make('published_from')->label(__('blog.from_date')),
                        Forms\Components\DatePicker::make('published_until')->label(__('blog.to_date')),
                    ])
                    ->query(function (Builder $query, array $data): Builder {
                        return $query
                            ->when(
                                $data['published_from'],
                                fn (Builder $query, $date): Builder => $query->whereDate('published_at', '>=', $date),
                            )
                            ->when(
                                $data['published_until'],
                                fn (Builder $query, $date): Builder => $query->whereDate('published_at', '<=', $date),
                            );
                    }),
            ])
            ->actions([
                ActionGroup::make([
                    Tables\Actions\ViewAction::make()
                        ->label(__('blog.view_action')),
                    Tables\Actions\EditAction::make()
                        ->label(__('blog.edit_action')),
                    Tables\Actions\DeleteAction::make()
                        ->label(__('blog.delete_action')),
                    
                    Action::make('duplicate')
                        ->label(__('blog.duplicate_action'))
                        ->icon('heroicon-o-document-duplicate')
                        ->action(function (BlogPost $record) {
                            $newPost = $record->replicate();
                            $newPost->title = $record->title . ' (Copy)';
                            $newPost->slug = $record->slug . '-copy';
                            $newPost->is_published = false;
                            $newPost->published_at = null;
                            $newPost->save();
                            
                            Notification::make()
                                ->title(__('blog.duplicate_success'))
                                ->success()
                                ->send();
                        }),
                        
                    Action::make('preview')
                        ->label(__('blog.preview_action'))
                        ->icon('heroicon-o-eye')
                        ->url(fn (BlogPost $record) => route('blog.show', $record->slug))
                        ->openUrlInNewTab(),
                ]),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make()
                        ->label(__('blog.delete_bulk')),
                    Tables\Actions\BulkAction::make('publish')
                        ->label(__('blog.publish_bulk'))
                        ->icon('heroicon-o-check')
                        ->action(function ($records) {
                            $records->each->update(['is_published' => true]);
                            
                            Notification::make()
                                ->title(__('blog.publish_success'))
                                ->success()
                                ->send();
                        }),
                    Tables\Actions\BulkAction::make('unpublish')
                        ->label(__('blog.unpublish_bulk'))
                        ->icon('heroicon-o-x-mark')
                        ->action(function ($records) {
                            $records->each->update(['is_published' => false]);
                            
                            Notification::make()
                                ->title(__('blog.unpublish_success'))
                                ->success()
                                ->send();
                        }),
                ]),
            ])
            ->defaultSort('published_at', 'desc');
    }

    public static function getRelations(): array
    {
        return [];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListBlogPosts::route('/'),
            'create' => Pages\CreateBlogPost::route('/create'),
            'edit' => Pages\EditBlogPost::route('/{record}/edit'),
        ];
    }

    public static function getModelLabel(): string
    {
        return __('blog.post');
    }

    public static function getPluralModelLabel(): string
    {
        return __('blog.posts');
    }

    public static function getNavigationLabel(): string
    {
        return __('blog.posts');
    }
}
ProjectRessorces <?php

namespace App\Filament\Resources;

use App\Models\Project;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Columns\ImageColumn;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\Textarea;
use Filament\Forms\Components\FileUpload;
use Filament\Forms\Components\Repeater;
use Filament\Forms\Components\Section;
use Filament\Forms\Components\Grid;
use Filament\Forms\Components\Toggle;

class ProjectResource extends Resource
{
    protected static ?string $model = Project::class;
    protected static ?string $navigationIcon = 'heroicon-o-briefcase';
    protected static ?string $navigationGroup = 'Portfolio';
    protected static ?int $navigationSort = 1;

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Section::make('General')
                    ->schema([
                        Grid::make(2)
                            ->schema([
                                TextInput::make('slug')
                                    ->required()
                                    ->unique(ignoreRecord: true),
                                TextInput::make('live_url')
                                    ->label('Live Demo URL')
                                    ->url(),
                                TextInput::make('github_url')
                                    ->label('GitHub URL')
                                    ->url(),
                            ]),
                        FileUpload::make('thumbnail')
                            ->image()
                            ->directory('projects')
                            ->required(),
                    ]),

                Section::make('Translations')
                    ->schema([
                        Repeater::make('title')
                            ->schema([
                                TextInput::make('locale')
                                    ->label('Language')
                                    ->required(),
                                TextInput::make('value')
                                    ->label('Title')
                                    ->required(),
                            ])
                            ->columns(2)
                            ->columnSpanFull(),

                        Repeater::make('description')
                            ->schema([
                                TextInput::make('locale')
                                    ->label('Language')
                                    ->required(),
                                Textarea::make('value')
                                    ->label('Description')
                                    ->rows(3)
                                    ->required(),
                            ])
                            ->columns(2)
                            ->columnSpanFull(),

                        Repeater::make('tech')
                            ->label('Tech Stack')
                            ->schema([
                                TextInput::make('value')
                                    ->label('Technology')
                                    ->required(),
                            ])
                            ->columns(1),
                    ]),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                ImageColumn::make('thumbnail')->circular(),
                TextColumn::make('title')
                    ->formatStateUsing(fn ($state) => $state[app()->getLocale()] ?? '-')
                    ->label('Title')
                    ->searchable()
                    ->sortable(),
                TextColumn::make('tech')
                    ->badge()
                    ->formatStateUsing(fn ($state) => collect($state)->join(', ')),
            ])
            ->filters([])
            ->actions([
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ]);
    }

  public static function getPages(): array
{
    return [
        'index'  => \App\Filament\Resources\ProjectResource\Pages\ListProjects::route('/'),
        'create' => \App\Filament\Resources\ProjectResource\Pages\CreateProject::route('/create'),
        'edit'   => \App\Filament\Resources\ProjectResource\Pages\EditProject::route('/{record}/edit'),
    ];
}
}
<app>
<http>
<controlers></controlers>:BlogController.php-<?php

namespace App\Http\Controllers;

use App\Models\BlogPost;
use Illuminate\Http\Request;

class BlogController extends Controller
{
    public function index(Request $request)
    {
        $posts = BlogPost::published()
            ->with('user')
            ->when($request->search, function ($query, $search) {
                $query->where(function ($q) use ($search) {
                    $q->where('title', 'like', "%{$search}%")
                      ->orWhere('content', 'like', "%{$search}%");
                });
            })
            ->latest('published_at')
            ->paginate(6);

        return view('blog.index', compact('posts'));
    }

    public function show(string $slug)
    {
        $post = BlogPost::published()
            ->with('user')
            ->where('slug', $slug)
            ->firstOrFail();

        $recentPosts = BlogPost::published()
            ->where('id', '!=', $post->id)
            ->latest('published_at')
            ->limit(3)
            ->get();

        return view('blog.show', compact('post', 'recentPosts'));
    }

    public function feed()
    {
        $posts = BlogPost::published()
            ->latest('published_at')
            ->limit(20)
            ->get();

        return response()->view('blog.feed', compact('posts'))
            ->header('Content-Type', 'application/xml');
    }

    public function sitemap()
    {
        $posts = BlogPost::published()
            ->latest('published_at')
            ->get();

        return response()->view('blog.sitemap', compact('posts'))
            ->header('Content-Type', 'text/xml');
    }
}
contactcontroler-<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Log;

class ContactController extends Controller
{
    public function submit(Request $request)
    {
        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|email|max:255',
            'subject' => 'required|string|max:255',
            'message' => 'required|string|min:10',
        ]);

        // Log the contact form submission for now
        Log::info('Contact form submitted', $validated);

        // TODO: Implement email sending
        // Mail::to('your-email@example.com')->send(new ContactFormMail($validated));

        if ($request->ajax()) {
            return response()->json([
                'success' => true,
                'message' => 'Message sent successfully!'
            ]);
        }

        return redirect()->back()->with('success', 'Message sent successfully!');
    }
}
projectcontroler--<?php

namespace App\Http\Controllers;

use App\Models\Project;
use Illuminate\Http\Request;

class ProjectController extends Controller
{
    public function index()
    {
        $projects = Project::paginate(9); // 9 proiecte per pagină
        return view('projects.index', compact('projects'));
    }

    public function show($locale, $slug)
    {
        $project = Project::where('slug', $slug)->firstOrFail();
        return view('projects.show', compact('project'));
    }
}

models:blogpost <?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Support\Str;
use Illuminate\Support\Facades\Storage;

class BlogPost extends Model
{
    use HasFactory;

    protected $fillable = [
        'title',
        'slug',
        'excerpt',
        'content',
        'featured_image',
        'is_published',
        'published_at',
        'meta_keywords',
        'meta_description',
        'user_id',
    ];

    protected $casts = [
        'is_published' => 'boolean',
        'published_at' => 'datetime',
        'meta_keywords' => 'array',
    ];

    protected static function boot()
    {
        parent::boot();

        static::creating(function ($post) {
            if (empty($post->slug)) {
                $post->slug = Str::slug($post->title);
            }
            
            // Ensure unique slug
            $originalSlug = $post->slug;
            $count = 1;
            while (static::where('slug', $post->slug)->exists()) {
                $post->slug = $originalSlug . '-' . $count;
                $count++;
            }
        });

        static::updating(function ($post) {
            if ($post->isDirty('title') && empty($post->slug)) {
                $post->slug = Str::slug($post->title);
            }
        });
    }

    public function user(): BelongsTo
    {
        return $this->belongsTo(User::class);
    }

    public function getImageUrlAttribute(): ?string
    {
        return $this->featured_image 
            ? Storage::url($this->featured_image)
            : null;
    }

    public function getReadingTimeAttribute(): int
    {
        $words = str_word_count(strip_tags($this->content));
        return ceil($words / 200); // 200 words per minute
    }

    public function scopePublished($query)
    {
        return $query->where('is_published', true)
                    ->where('published_at', '<=', now());
    }

    public function scopeDraft($query)
    {
        return $query->where('is_published', false);
    }

    public function scopeRecent($query)
    {
        return $query->published()->orderBy('published_at', 'desc');
    }
}
       project<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Project extends Model
{
    use HasFactory;

    protected $casts = [
        'title'       => 'array',
        'description' => 'array',
        'tech'        => 'array',
    ];

    public function getRouteKeyName()
    {
        return 'slug';
    }
}

config/app<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Application Name
    |--------------------------------------------------------------------------
    |
    | This value is the name of your application, which will be used when the
    | framework needs to place the application's name in a notification or
    | other UI elements where an application name needs to be displayed.
    |
    */

    'name' => env('APP_NAME', 'Laravel'),

    /*
    |--------------------------------------------------------------------------
    | Application Environment
    |--------------------------------------------------------------------------
    |
    | This value determines the "environment" your application is currently
    | running in. This may determine how you prefer to configure various
    | services the application utilizes. Set this in your ".env" file.
    |
    */

    'env' => env('APP_ENV', 'production'),

    /*
    |--------------------------------------------------------------------------
    | Application Debug Mode
    |--------------------------------------------------------------------------
    |
    | When your application is in debug mode, detailed error messages with
    | stack traces will be shown on every error that occurs within your
    | application. If disabled, a simple generic error page is shown.
    |
    */

    'debug' => (bool) env('APP_DEBUG', false),

    /*
    |--------------------------------------------------------------------------
    | Application URL
    |--------------------------------------------------------------------------
    |
    | This URL is used by the console to properly generate URLs when using
    | the Artisan command line tool. You should set this to the root of
    | the application so that it's available within Artisan commands.
    |
    */

    'url' => env('APP_URL', 'http://localhost'),

    /*
    |--------------------------------------------------------------------------
    | Application Timezone
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default timezone for your application, which
    | will be used by the PHP date and date-time functions. The timezone
    | is set to "UTC" by default as it is suitable for most use cases.
    |
    */

    'timezone' => 'UTC',

    /*
    |--------------------------------------------------------------------------
    | Application Locale Configuration
    |--------------------------------------------------------------------------
    |
    | The application locale determines the default locale that will be used
    | by Laravel's translation / localization methods. This option can be
    | set to any locale for which you plan to have translation strings.
    |
    */

    'locale' => env('APP_LOCALE', 'en'),

    'fallback_locale' => env('APP_FALLBACK_LOCALE', 'en'),

    'faker_locale' => env('APP_FAKER_LOCALE', 'en_US'),

    'available_locales' => ['en','ro'],


    /*
    |--------------------------------------------------------------------------
    | Encryption Key
    |--------------------------------------------------------------------------
    |
    | This key is utilized by Laravel's encryption services and should be set
    | to a random, 32 character string to ensure that all encrypted values
    | are secure. You should do this prior to deploying the application.
    |
    */

    'cipher' => 'AES-256-CBC',

    'key' => env('APP_KEY'),

    'previous_keys' => [
        ...array_filter(
            explode(',', env('APP_PREVIOUS_KEYS', ''))
        ),
    ],

    /*
    |--------------------------------------------------------------------------
    | Maintenance Mode Driver
    |--------------------------------------------------------------------------
    |
    | These configuration options determine the driver used to determine and
    | manage Laravel's "maintenance mode" status. The "cache" driver will
    | allow maintenance mode to be controlled across multiple machines.
    |
    | Supported drivers: "file", "cache"
    |
    */

    'maintenance' => [
        'driver' => env('APP_MAINTENANCE_DRIVER', 'file'),
        'store' => env('APP_MAINTENANCE_STORE', 'database'),
    ],

];
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->mediumText('value');
            $table->integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->string('owner');
            $table->integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
{
    Schema::create('projects', function (Blueprint $table) {
        $table->id();
        $table->string('slug')->unique();
        $table->json('title');      // {"en":"E-commerce","ro":"Magazin online"}
        $table->json('description');
        $table->json('tech');       // ["Laravel","Vue"]
        $table->string('live_url')->nullable();
        $table->string('github_url')->nullable();
        $table->string('thumbnail')->nullable();
        $table->timestamps();
    });
}
    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('projects');
    }
};
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('blog_posts', function (Blueprint $table) {
            $table->id();
            $table->string('title');
            $table->string('slug')->unique();
            $table->text('excerpt')->nullable();
            $table->longText('content');
            $table->string('featured_image')->nullable();
            $table->boolean('is_published')->default(false);
            $table->timestamp('published_at')->nullable();
            $table->json('meta_keywords')->nullable();
            $table->string('meta_description')->nullable();
            $table->foreignId('user_id')->constrained()->onDelete('cascade');
            $table->timestamps();
            
            $table->index(['is_published', 'published_at']);
            $table->index('slug');
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('blog_posts');
    }
};

lang/en actions <?php

declare(strict_types=1);

return [
    'accept'          => 'Accept',
    'action'          => 'Action',
    'actions'         => 'Actions',
    'add'             => 'Add',
    'admin'           => 'Admin',
    'agree'           => 'Agree',
    'archive'         => 'Archive',
    'assign'          => 'Assign',
    'associate'       => 'Associate',
    'attach'          => 'Attach',
    'browse'          => 'Browse',
    'cancel'          => 'Cancel',
    'choose'          => 'Choose',
    'choose_file'     => 'Choose File',
    'choose_image'    => 'Choose Image',
    'click_to_copy'   => 'Click to copy',
    'close'           => 'Close',
    'collapse'        => 'Collapse',
    'collapse_all'    => 'Collapse All',
    'comment'         => 'Comment',
    'confirm'         => 'Confirm',
    'connect'         => 'Connect',
    'create'          => 'Create',
    'delete'          => 'Delete',
    'detach'          => 'Detach',
    'details'         => 'Details',
    'disable'         => 'Disable',
    'discard'         => 'Discard',
    'done'            => 'Done',
    'down'            => 'Down',
    'duplicate'       => 'Duplicate',
    'edit'            => 'Edit',
    'enable'          => 'Enable',
    'expand'          => 'Expand',
    'expand_all'      => 'Expand All',
    'explanation'     => 'Explanation',
    'export'          => 'Export',
    'file'            => 'File',
    'files'           => 'Files',
    'go_home'         => 'Go Home',
    'hide'            => 'Hide',
    'home'            => 'Home',
    'image'           => 'Image',
    'impersonate'     => 'Impersonate',
    'impersonation'   => 'Impersonation',
    'import'          => 'Import',
    'introduction'    => 'Introduction',
    'like'            => 'Like',
    'load'            => 'Load',
    'localize'        => 'Localize',
    'log_in'          => 'Log In',
    'log_out'         => 'Log Out',
    'named'           => [
        'add'       => 'Add :name',
        'choose'    => 'Choose :name',
        'create'    => 'Create :name',
        'delete'    => 'Delete :name',
        'duplicate' => 'Duplicate :name',
        'edit'      => 'Edit :name',
        'export'    => 'Export :name',
        'hide'      => 'Hide :name',
        'import'    => 'Import :name',
        'new'       => 'New :name',
        'restore'   => 'Restore :name',
        'save'      => 'Save :name',
        'search'    => 'Search :name',
        'show'      => 'Show :name',
        'update'    => 'Update :name',
        'view'      => 'View :name',
    ],
    'new'             => 'New',
    'no'              => 'No',
    'open'            => 'Open',
    'open_website'    => 'Open on the website',
    'preview'         => 'Preview',
    'price'           => 'Price',
    'record'          => 'Record',
    'restore'         => 'Restore',
    'save'            => 'Save',
    'save_and_close'  => 'Save & Close',
    'save_and_return' => 'Save & Return',
    'search'          => 'Search',
    'select'          => 'Select',
    'select_all'      => 'Select All',
    'send'            => 'Send',
    'settings'        => 'Settings',
    'show'            => 'Show',
    'show_all'        => 'Show All',
    'sign_in'         => 'Sign In',
    'solve'           => 'Solve',
    'start'           => 'Start',
    'stop'            => 'Stop',
    'submit'          => 'Submit',
    'subscribe'       => 'Subscribe',
    'switch'          => 'Switch',
    'switch_to_role'  => 'Switch To Role',
    'tag'             => 'Tag',
    'tags'            => 'Tags',
    'target_link'     => [
        'blank'  => 'Open in a new window',
        'parent' => 'Open in a parent frame',
        'self'   => 'Open in a current window',
        'top'    => 'Open in the topmost frame',
    ],
    'translate'       => 'Translate',
    'translate_it'    => 'Translate It',
    'unpack'          => 'Unpack',
    'unsubscribe'     => 'Unsubscribe',
    'up'              => 'Up',
    'update'          => 'Update',
    'user'            => 'User',
    'view'            => 'View',
    'yes'             => 'Yes',
];

       auth <?php

declare(strict_types=1);

return [
    'failed'   => 'These credentials do not match our records.',
    'password' => 'The provided password is incorrect.',
    'throttle' => 'Too many login attempts. Please try again in :seconds seconds.',
];

       http-statuses <?php

declare(strict_types=1);

return [
    '0'            => 'Unknown Error',
    '100'          => 'Continue',
    '101'          => 'Switching Protocols',
    '102'          => 'Processing',
    '200'          => 'OK',
    '201'          => 'Created',
    '202'          => 'Accepted',
    '203'          => 'Non-Authoritative Information',
    '204'          => 'No Content',
    '205'          => 'Reset Content',
    '206'          => 'Partial Content',
    '207'          => 'Multi-Status',
    '208'          => 'Already Reported',
    '226'          => 'IM Used',
    '300'          => 'Multiple Choices',
    '301'          => 'Moved Permanently',
    '302'          => 'Found',
    '303'          => 'See Other',
    '304'          => 'Not Modified',
    '305'          => 'Use Proxy',
    '307'          => 'Temporary Redirect',
    '308'          => 'Permanent Redirect',
    '400'          => 'Bad Request',
    '401'          => 'Unauthorized',
    '402'          => 'Payment Required',
    '403'          => 'Forbidden',
    '404'          => 'Not Found',
    '405'          => 'Method Not Allowed',
    '406'          => 'Not Acceptable',
    '407'          => 'Proxy Authentication Required',
    '408'          => 'Request Timeout',
    '409'          => 'Conflict',
    '410'          => 'Gone',
    '411'          => 'Length Required',
    '412'          => 'Precondition Failed',
    '413'          => 'Payload Too Large',
    '414'          => 'URI Too Long',
    '415'          => 'Unsupported Media Type',
    '416'          => 'Range Not Satisfiable',
    '417'          => 'Expectation Failed',
    '418'          => 'I\'m a teapot',
    '419'          => 'Session Has Expired',
    '421'          => 'Misdirected Request',
    '422'          => 'Unprocessable Entity',
    '423'          => 'Locked',
    '424'          => 'Failed Dependency',
    '425'          => 'Too Early',
    '426'          => 'Upgrade Required',
    '428'          => 'Precondition Required',
    '429'          => 'Too Many Requests',
    '431'          => 'Request Header Fields Too Large',
    '444'          => 'Connection Closed Without Response',
    '449'          => 'Retry With',
    '451'          => 'Unavailable For Legal Reasons',
    '499'          => 'Client Closed Request',
    '500'          => 'Internal Server Error',
    '501'          => 'Not Implemented',
    '502'          => 'Bad Gateway',
    '503'          => 'Maintenance Mode',
    '504'          => 'Gateway Timeout',
    '505'          => 'HTTP Version Not Supported',
    '506'          => 'Variant Also Negotiates',
    '507'          => 'Insufficient Storage',
    '508'          => 'Loop Detected',
    '509'          => 'Bandwidth Limit Exceeded',
    '510'          => 'Not Extended',
    '511'          => 'Network Authentication Required',
    '520'          => 'Unknown Error',
    '521'          => 'Web Server is Down',
    '522'          => 'Connection Timed Out',
    '523'          => 'Origin Is Unreachable',
    '524'          => 'A Timeout Occurred',
    '525'          => 'SSL Handshake Failed',
    '526'          => 'Invalid SSL Certificate',
    '527'          => 'Railgun Error',
    '598'          => 'Network Read Timeout Error',
    '599'          => 'Network Connect Timeout Error',
    'unknownError' => 'Unknown Error',
];

       pages<?php
return [
    'home_title'   => 'About & Stack',
    'about_h1'     => 'About me',
    'stack_h1'     => 'My Tech Stack',
    'projects_h1'  => 'Projects',
    'contact_h1'   => 'Contact',
    'back' => 'Back to projects',
];
       paginations <?php

declare(strict_types=1);

return [
    'next'     => 'Next &raquo;',
    'previous' => '&laquo; Previous',
];

       psawword <?php

declare(strict_types=1);

return [
    'reset'     => 'Your password has been reset.',
    'sent'      => 'We have emailed your password reset link.',
    'throttled' => 'Please wait before retrying.',
    'token'     => 'This password reset token is invalid.',
    'user'      => 'We can\'t find a user with that email address.',
];

       vcalidation <?php

declare(strict_types=1);

return [
    'accepted'               => 'The :attribute field must be accepted.',
    'accepted_if'            => 'The :attribute field must be accepted when :other is :value.',
    'active_url'             => 'The :attribute field must be a valid URL.',
    'after'                  => 'The :attribute field must be a date after :date.',
    'after_or_equal'         => 'The :attribute field must be a date after or equal to :date.',
    'alpha'                  => 'The :attribute field must only contain letters.',
    'alpha_dash'             => 'The :attribute field must only contain letters, numbers, dashes, and underscores.',
    'alpha_num'              => 'The :attribute field must only contain letters and numbers.',
    'any_of'                 => 'The :attribute field is invalid.',
    'array'                  => 'The :attribute field must be an array.',
    'ascii'                  => 'The :attribute field must only contain single-byte alphanumeric characters and symbols.',
    'before'                 => 'The :attribute field must be a date before :date.',
    'before_or_equal'        => 'The :attribute field must be a date before or equal to :date.',
    'between'                => [
        'array'   => 'The :attribute field must have between :min and :max items.',
        'file'    => 'The :attribute field must be between :min and :max kilobytes.',
        'numeric' => 'The :attribute field must be between :min and :max.',
        'string'  => 'The :attribute field must be between :min and :max characters.',
    ],
    'boolean'                => 'The :attribute field must be true or false.',
    'can'                    => 'The :attribute field contains an unauthorized value.',
    'confirmed'              => 'The :attribute field confirmation does not match.',
    'contains'               => 'The :attribute field is missing a required value.',
    'current_password'       => 'The password is incorrect.',
    'date'                   => 'The :attribute field must be a valid date.',
    'date_equals'            => 'The :attribute field must be a date equal to :date.',
    'date_format'            => 'The :attribute field must match the format :format.',
    'decimal'                => 'The :attribute field must have :decimal decimal places.',
    'declined'               => 'The :attribute field must be declined.',
    'declined_if'            => 'The :attribute field must be declined when :other is :value.',
    'different'              => 'The :attribute field and :other must be different.',
    'digits'                 => 'The :attribute field must be :digits digits.',
    'digits_between'         => 'The :attribute field must be between :min and :max digits.',
    'dimensions'             => 'The :attribute field has invalid image dimensions.',
    'distinct'               => 'The :attribute field has a duplicate value.',
    'doesnt_end_with'        => 'The :attribute field must not end with one of the following: :values.',
    'doesnt_start_with'      => 'The :attribute field must not start with one of the following: :values.',
    'email'                  => 'The :attribute field must be a valid email address.',
    'ends_with'              => 'The :attribute field must end with one of the following: :values.',
    'enum'                   => 'The selected :attribute is invalid.',
    'exists'                 => 'The selected :attribute is invalid.',
    'extensions'             => 'The :attribute field must have one of the following extensions: :values.',
    'file'                   => 'The :attribute field must be a file.',
    'filled'                 => 'The :attribute field must have a value.',
    'gt'                     => [
        'array'   => 'The :attribute field must have more than :value items.',
        'file'    => 'The :attribute field must be greater than :value kilobytes.',
        'numeric' => 'The :attribute field must be greater than :value.',
        'string'  => 'The :attribute field must be greater than :value characters.',
    ],
    'gte'                    => [
        'array'   => 'The :attribute field must have :value items or more.',
        'file'    => 'The :attribute field must be greater than or equal to :value kilobytes.',
        'numeric' => 'The :attribute field must be greater than or equal to :value.',
        'string'  => 'The :attribute field must be greater than or equal to :value characters.',
    ],
    'hex_color'              => 'The :attribute field must be a valid hexadecimal color.',
    'image'                  => 'The :attribute field must be an image.',
    'in'                     => 'The selected :attribute is invalid.',
    'in_array'               => 'The :attribute field must exist in :other.',
    'in_array_keys'          => 'The :attribute field must contain at least one of the following keys: :values.',
    'integer'                => 'The :attribute field must be an integer.',
    'ip'                     => 'The :attribute field must be a valid IP address.',
    'ipv4'                   => 'The :attribute field must be a valid IPv4 address.',
    'ipv6'                   => 'The :attribute field must be a valid IPv6 address.',
    'json'                   => 'The :attribute field must be a valid JSON string.',
    'list'                   => 'The :attribute field must be a list.',
    'lowercase'              => 'The :attribute field must be lowercase.',
    'lt'                     => [
        'array'   => 'The :attribute field must have less than :value items.',
        'file'    => 'The :attribute field must be less than :value kilobytes.',
        'numeric' => 'The :attribute field must be less than :value.',
        'string'  => 'The :attribute field must be less than :value characters.',
    ],
    'lte'                    => [
        'array'   => 'The :attribute field must not have more than :value items.',
        'file'    => 'The :attribute field must be less than or equal to :value kilobytes.',
        'numeric' => 'The :attribute field must be less than or equal to :value.',
        'string'  => 'The :attribute field must be less than or equal to :value characters.',
    ],
    'mac_address'            => 'The :attribute field must be a valid MAC address.',
    'max'                    => [
        'array'   => 'The :attribute field must not have more than :max items.',
        'file'    => 'The :attribute field must not be greater than :max kilobytes.',
        'numeric' => 'The :attribute field must not be greater than :max.',
        'string'  => 'The :attribute field must not be greater than :max characters.',
    ],
    'max_digits'             => 'The :attribute field must not have more than :max digits.',
    'mimes'                  => 'The :attribute field must be a file of type: :values.',
    'mimetypes'              => 'The :attribute field must be a file of type: :values.',
    'min'                    => [
        'array'   => 'The :attribute field must have at least :min items.',
        'file'    => 'The :attribute field must be at least :min kilobytes.',
        'numeric' => 'The :attribute field must be at least :min.',
        'string'  => 'The :attribute field must be at least :min characters.',
    ],
    'min_digits'             => 'The :attribute field must have at least :min digits.',
    'missing'                => 'The :attribute field must be missing.',
    'missing_if'             => 'The :attribute field must be missing when :other is :value.',
    'missing_unless'         => 'The :attribute field must be missing unless :other is :value.',
    'missing_with'           => 'The :attribute field must be missing when :values is present.',
    'missing_with_all'       => 'The :attribute field must be missing when :values are present.',
    'multiple_of'            => 'The :attribute field must be a multiple of :value.',
    'not_in'                 => 'The selected :attribute is invalid.',
    'not_regex'              => 'The :attribute field format is invalid.',
    'numeric'                => 'The :attribute field must be a number.',
    'password'               => [
        'letters'       => 'The :attribute field must contain at least one letter.',
        'mixed'         => 'The :attribute field must contain at least one uppercase and one lowercase letter.',
        'numbers'       => 'The :attribute field must contain at least one number.',
        'symbols'       => 'The :attribute field must contain at least one symbol.',
        'uncompromised' => 'The given :attribute has appeared in a data leak. Please choose a different :attribute.',
    ],
    'present'                => 'The :attribute field must be present.',
    'present_if'             => 'The :attribute field must be present when :other is :value.',
    'present_unless'         => 'The :attribute field must be present unless :other is :value.',
    'present_with'           => 'The :attribute field must be present when :values is present.',
    'present_with_all'       => 'The :attribute field must be present when :values are present.',
    'prohibited'             => 'The :attribute field is prohibited.',
    'prohibited_if'          => 'The :attribute field is prohibited when :other is :value.',
    'prohibited_if_accepted' => 'The :attribute field is prohibited when :other is accepted.',
    'prohibited_if_declined' => 'The :attribute field is prohibited when :other is declined.',
    'prohibited_unless'      => 'The :attribute field is prohibited unless :other is in :values.',
    'prohibits'              => 'The :attribute field prohibits :other from being present.',
    'regex'                  => 'The :attribute field format is invalid.',
    'required'               => 'The :attribute field is required.',
    'required_array_keys'    => 'The :attribute field must contain entries for: :values.',
    'required_if'            => 'The :attribute field is required when :other is :value.',
    'required_if_accepted'   => 'The :attribute field is required when :other is accepted.',
    'required_if_declined'   => 'The :attribute field is required when :other is declined.',
    'required_unless'        => 'The :attribute field is required unless :other is in :values.',
    'required_with'          => 'The :attribute field is required when :values is present.',
    'required_with_all'      => 'The :attribute field is required when :values are present.',
    'required_without'       => 'The :attribute field is required when :values is not present.',
    'required_without_all'   => 'The :attribute field is required when none of :values are present.',
    'same'                   => 'The :attribute field must match :other.',
    'size'                   => [
        'array'   => 'The :attribute field must contain :size items.',
        'file'    => 'The :attribute field must be :size kilobytes.',
        'numeric' => 'The :attribute field must be :size.',
        'string'  => 'The :attribute field must be :size characters.',
    ],
    'starts_with'            => 'The :attribute field must start with one of the following: :values.',
    'string'                 => 'The :attribute field must be a string.',
    'timezone'               => 'The :attribute field must be a valid timezone.',
    'ulid'                   => 'The :attribute field must be a valid ULID.',
    'unique'                 => 'The :attribute has already been taken.',
    'uploaded'               => 'The :attribute failed to upload.',
    'uppercase'              => 'The :attribute field must be uppercase.',
    'url'                    => 'The :attribute field must be a valid URL.',
    'uuid'                   => 'The :attribute field must be a valid UUID.',
    'attributes'             => [
        'address'                  => 'address',
        'affiliate_url'            => 'affiliate URL',
        'age'                      => 'age',
        'amount'                   => 'amount',
        'announcement'             => 'announcement',
        'area'                     => 'area',
        'audience_prize'           => 'audience prize',
        'audience_winner'          => 'audience winner',
        'available'                => 'available',
        'birthday'                 => 'birthday',
        'body'                     => 'body',
        'city'                     => 'city',
        'company'                  => 'company',
        'compilation'              => 'compilation',
        'concept'                  => 'concept',
        'conditions'               => 'conditions',
        'content'                  => 'content',
        'contest'                  => 'contest',
        'country'                  => 'country',
        'cover'                    => 'cover',
        'created_at'               => 'created at',
        'creator'                  => 'creator',
        'currency'                 => 'currency',
        'current_password'         => 'current password',
        'customer'                 => 'customer',
        'date'                     => 'date',
        'date_of_birth'            => 'date of birth',
        'dates'                    => 'dates',
        'day'                      => 'day',
        'deleted_at'               => 'deleted at',
        'description'              => 'description',
        'display_type'             => 'display type',
        'district'                 => 'district',
        'duration'                 => 'duration',
        'email'                    => 'email',
        'excerpt'                  => 'excerpt',
        'filter'                   => 'filter',
        'finished_at'              => 'finished at',
        'first_name'               => 'first name',
        'gender'                   => 'gender',
        'grand_prize'              => 'grand prize',
        'group'                    => 'group',
        'hour'                     => 'hour',
        'image'                    => 'image',
        'image_desktop'            => 'desktop image',
        'image_main'               => 'main image',
        'image_mobile'             => 'mobile image',
        'images'                   => 'images',
        'is_audience_winner'       => 'is audience winner',
        'is_hidden'                => 'is hidden',
        'is_subscribed'            => 'is subscribed',
        'is_visible'               => 'is visible',
        'is_winner'                => 'is winner',
        'items'                    => 'items',
        'key'                      => 'key',
        'last_name'                => 'last name',
        'lesson'                   => 'lesson',
        'line_address_1'           => 'line address 1',
        'line_address_2'           => 'line address 2',
        'login'                    => 'login',
        'message'                  => 'message',
        'middle_name'              => 'middle name',
        'minute'                   => 'minute',
        'mobile'                   => 'mobile',
        'month'                    => 'month',
        'name'                     => 'name',
        'national_code'            => 'national code',
        'number'                   => 'number',
        'password'                 => 'password',
        'password_confirmation'    => 'password confirmation',
        'phone'                    => 'phone',
        'photo'                    => 'photo',
        'portfolio'                => 'portfolio',
        'postal_code'              => 'postal code',
        'preview'                  => 'preview',
        'price'                    => 'price',
        'product_id'               => 'product ID',
        'product_uid'              => 'product UID',
        'product_uuid'             => 'product UUID',
        'promo_code'               => 'promo code',
        'province'                 => 'province',
        'quantity'                 => 'quantity',
        'reason'                   => 'reason',
        'recaptcha_response_field' => 'recaptcha response field',
        'referee'                  => 'referee',
        'referees'                 => 'referees',
        'reject_reason'            => 'reject reason',
        'remember'                 => 'remember',
        'restored_at'              => 'restored at',
        'result_text_under_image'  => 'result text under image',
        'role'                     => 'role',
        'rule'                     => 'rule',
        'rules'                    => 'rules',
        'second'                   => 'second',
        'sex'                      => 'sex',
        'shipment'                 => 'shipment',
        'short_text'               => 'short text',
        'size'                     => 'size',
        'skills'                   => 'skills',
        'slug'                     => 'slug',
        'specialization'           => 'specialization',
        'started_at'               => 'started at',
        'state'                    => 'state',
        'status'                   => 'status',
        'street'                   => 'street',
        'student'                  => 'student',
        'subject'                  => 'subject',
        'tag'                      => 'tag',
        'tags'                     => 'tags',
        'teacher'                  => 'teacher',
        'terms'                    => 'terms',
        'test_description'         => 'test description',
        'test_locale'              => 'test locale',
        'test_name'                => 'test name',
        'text'                     => 'text',
        'time'                     => 'time',
        'title'                    => 'title',
        'type'                     => 'type',
        'updated_at'               => 'updated at',
        'user'                     => 'user',
        'username'                 => 'username',
        'value'                    => 'value',
        'winner'                   => 'winner',
        'work'                     => 'work',
        'year'                     => 'year',
    ],
];

lang/ro actions <?php

declare(strict_types=1);

return [
    'accept'          => 'Acceptă',
    'action'          => 'Acțiune',
    'actions'         => 'Acțiuni',
    'add'             => 'Adăuga',
    'admin'           => 'Admin',
    'agree'           => 'Aprobă',
    'archive'         => 'Arhivează',
    'assign'          => 'Atribuie',
    'associate'       => 'Asociază',
    'attach'          => 'Atașați',
    'browse'          => 'Navighează',
    'cancel'          => 'Anulează',
    'choose'          => 'Alege',
    'choose_file'     => 'Alege fișierul',
    'choose_image'    => 'Alege imaginea',
    'click_to_copy'   => 'Faceți click pentru a copia',
    'close'           => 'Închide',
    'collapse'        => 'Restrânge',
    'collapse_all'    => 'Restrânge tot',
    'comment'         => 'Cometariu',
    'confirm'         => 'Confirmă',
    'connect'         => 'Conectați-vă',
    'create'          => 'Crează',
    'delete'          => 'Șterge',
    'detach'          => 'Desprinde',
    'details'         => 'Detalii',
    'disable'         => 'Dezactivați',
    'discard'         => 'Renunță',
    'done'            => 'Terminat',
    'down'            => 'Jos',
    'duplicate'       => 'Duplicat',
    'edit'            => 'Editați',
    'enable'          => 'Permite',
    'expand'          => 'Extinde',
    'expand_all'      => 'Extinde toate',
    'explanation'     => 'Explicaţie',
    'export'          => 'Exportă',
    'file'            => 'Fişier',
    'files'           => 'Fișiere',
    'go_home'         => 'Pagina principală',
    'hide'            => 'Ascunde',
    'home'            => 'Pagina principală',
    'image'           => 'Imagine',
    'impersonate'     => 'Impersonează',
    'impersonation'   => 'Impersonare',
    'import'          => 'Import',
    'introduction'    => 'Introducere',
    'like'            => 'Apreciază',
    'load'            => 'Încarcă',
    'localize'        => 'Localizează',
    'log_in'          => 'Log in',
    'log_out'         => 'Deconectați-vă',
    'named'           => [
        'add'       => 'Adăugă :name',
        'choose'    => 'Alege :name',
        'create'    => 'Crează :name',
        'delete'    => 'Șterge :name',
        'duplicate' => 'Duplicat: nume',
        'edit'      => 'Editare :name',
        'export'    => 'Exportă :name',
        'hide'      => 'Ascunde :name',
        'import'    => 'Import :name',
        'new'       => ':name nou',
        'restore'   => 'Restaurează :name',
        'save'      => 'Salvează :name',
        'search'    => 'Caută :name',
        'show'      => 'Arată :name',
        'update'    => 'Actualizare :name',
        'view'      => 'Vezi :name',
    ],
    'new'             => 'Nou',
    'no'              => 'Nu',
    'open'            => 'Deschide',
    'open_website'    => 'Deschide pe site',
    'preview'         => 'Previzualizare',
    'price'           => 'Preț',
    'record'          => 'Înregistează',
    'restore'         => 'Restaurează',
    'save'            => 'Salvați',
    'save_and_close'  => 'Salvați și închideți',
    'save_and_return' => 'Salvați și întoarceți',
    'search'          => 'Căută',
    'select'          => 'Selectează',
    'select_all'      => 'Selectează tot',
    'send'            => 'Trimite',
    'settings'        => 'Setări',
    'show'            => 'Arată',
    'show_all'        => 'Arată tot',
    'sign_in'         => 'Conectează-te',
    'solve'           => 'Rezolvă',
    'start'           => 'Pornește',
    'stop'            => 'Termină',
    'submit'          => 'Trimite',
    'subscribe'       => 'Abonează-te',
    'switch'          => 'Schimbă',
    'switch_to_role'  => 'Schimbă rolul',
    'tag'             => 'Etichetă',
    'tags'            => 'Etichete',
    'target_link'     => [
        'blank'  => 'Deschide într-o fereastră nouă',
        'parent' => 'Deschideți într-un cadru părinte',
        'self'   => 'Deschide într-o fereastră curentă',
        'top'    => 'Deschide în cadrul superior',
    ],
    'translate'       => 'Traduceți',
    'translate_it'    => 'Traduceți-l',
    'unpack'          => 'Despachetează',
    'unsubscribe'     => 'Dezabonați-vă',
    'up'              => 'Sus',
    'update'          => 'Actualizați',
    'user'            => 'Utilizator',
    'view'            => 'Vezi',
    'yes'             => 'Da',
];

       auth <?php

declare(strict_types=1);

return [
    'failed'   => 'Datele de identificare nu pot fi confirmate.',
    'password' => 'Parola este greșită.',
    'throttle' => 'Prea multe încercări de intrare în cont. Puteți încerca din nou peste :seconds secunde.',
];

       http-statuses <?php

declare(strict_types=1);

return [
    '0'            => 'Eroare necunoscută',
    '100'          => 'Continua',
    '101'          => 'Protocoale de comutare',
    '102'          => 'Prelucrare',
    '200'          => 'Bine',
    '201'          => 'Creată',
    '202'          => 'Admis',
    '203'          => 'Informații neautoritare',
    '204'          => 'Fara continut',
    '205'          => 'Resetați conținutul',
    '206'          => 'Conținut parțial',
    '207'          => 'Multi-Stare',
    '208'          => 'Deja Raportat',
    '226'          => 'Sunt obișnuit',
    '300'          => 'Alegeri multiple',
    '301'          => 'Mutat permanent',
    '302'          => 'Găsite',
    '303'          => 'Vezi Altele',
    '304'          => 'Nemodificat',
    '305'          => 'Utilizarea proxy',
    '307'          => 'Redirecționare temporară',
    '308'          => 'Redirecționare permanentă',
    '400'          => 'Cerere greşită',
    '401'          => 'Neautorizat',
    '402'          => 'Plata obligatorie',
    '403'          => 'Interzis',
    '404'          => 'Nu a fost gasit',
    '405'          => 'metoda nepermisa',
    '406'          => 'Inacceptabil',
    '407'          => 'Este necesară autentificarea proxy',
    '408'          => 'Solicitare Timeout',
    '409'          => 'Conflict',
    '410'          => 'Plecat',
    '411'          => 'Lungimea necesară',
    '412'          => 'Condiție preliminară eșuată',
    '413'          => 'Sarcina utilă prea mare',
    '414'          => 'URI prea lung',
    '415'          => 'Tip media neacceptat',
    '416'          => 'Interval nu este satisfăcător',
    '417'          => 'Așteptarea a eșuat',
    '418'          => 'Sunt un ceainic',
    '419'          => 'Sesiunea a expirat',
    '421'          => 'Solicitare direcționată greșit',
    '422'          => 'Entitate neprocesabilă',
    '423'          => 'Blocat',
    '424'          => 'Dependență eșuată',
    '425'          => 'Prea devreme',
    '426'          => 'Upgrade necesar',
    '428'          => 'Precondiție necesară',
    '429'          => 'Prea Multe Cereri',
    '431'          => 'Câmpurile antetului solicitării sunt prea mari',
    '444'          => 'Conexiune închisă fără răspuns',
    '449'          => 'Reîncercați cu',
    '451'          => 'Indisponibil din motive legale',
    '499'          => 'Solicitare client închisă',
    '500'          => 'Internal Server Error',
    '501'          => 'Neimplementat',
    '502'          => 'Poarta proastă',
    '503'          => 'modul de întreținere',
    '504'          => 'Timeout Gateway',
    '505'          => 'Versiunea HTTP nu este acceptată',
    '506'          => 'Varianta, de asemenea, negociază',
    '507'          => 'Spațiu de stocare insuficient',
    '508'          => 'Bucla detectată',
    '509'          => 'Limita pentru lățime de bandă a fost depășită',
    '510'          => 'Neextins',
    '511'          => 'Este necesară autentificarea în rețea',
    '520'          => 'Eroare necunoscută',
    '521'          => 'Serverul web este oprit',
    '522'          => 'Conexiunea a expirat',
    '523'          => 'Originea este de neatins',
    '524'          => 'A avut loc un timeout',
    '525'          => 'SSL Handshake a eșuat',
    '526'          => 'Certificat SSL nevalid',
    '527'          => 'Eroare gun rail',
    '598'          => 'Eroare de timeout citire în rețea',
    '599'          => 'Eroare de expirare a conexiunii la rețea',
    'unknownError' => 'Eroare necunoscută',
];

       pages <?php
return [
    'home_title'   => 'Despre & Stack',
    'about_h1'     => 'Despre mine',
    'stack_h1'     => 'Tech Stack-ul meu',
    'projects_h1'  => 'Proiecte',
    'contact_h1'   => 'Contact',
    'back' => 'Înapoi la proiecte',
    'hero_hi' => 'Salut, sunt',
    'hero_subtitle' => 'Full-Stack Developer construind aplicații web scalabile cu Laravel, Vue și Tailwind',
    'see_work' => 'Vezi proiectele',
    'hire_me' => 'Angajează-mă',
];
       paginations <?php

declare(strict_types=1);

return [
    'next'     => 'Înainte &raquo;',
    'previous' => '&laquo; Înapoi',
];

       psawword <?php

declare(strict_types=1);

return [
    'reset'     => 'Parola a fost resetată!',
    'sent'      => 'Am trimis un e-mail cu link-ul de resetare a parolei!',
    'throttled' => 'Vă rugăm să așteptați înainte de a încerca din nou.',
    'token'     => 'Codul de resetare a parolei este greșit.',
    'user'      => 'Nu există niciun utilizator cu această adresă de e-mail.',
];

       calidation <?php

declare(strict_types=1);

return [
    'accepted'               => 'Câmpul :attribute trebuie să fie acceptat.',
    'accepted_if'            => 'Câmpul :attribute trebuie să fie acceptat când :other este :value.',
    'active_url'             => 'Câmpul :attribute nu este un URL valid.',
    'after'                  => 'Câmpul :attribute trebuie să fie o dată după :date.',
    'after_or_equal'         => 'Câmpul :attribute trebuie să fie o dată ulterioară sau egală cu :date.',
    'alpha'                  => 'Câmpul :attribute poate conține doar litere.',
    'alpha_dash'             => 'Câmpul :attribute poate conține doar litere, numere și cratime.',
    'alpha_num'              => 'Câmpul :attribute poate conține doar litere și numere.',
    'any_of'                 => 'The :attribute field is invalid.',
    'array'                  => 'Câmpul :attribute trebuie să fie un array.',
    'ascii'                  => ':Attribute trebuie să conțină doar caractere și simboluri alfanumerice pe un singur octet.',
    'before'                 => 'Câmpul :attribute trebuie să fie o dată înainte de :date.',
    'before_or_equal'        => 'Câmpul :attribute trebuie să fie o dată înainte sau egală cu :date.',
    'between'                => [
        'array'   => 'Câmpul :attribute trebuie să aibă între :min și :max elemente.',
        'file'    => 'Câmpul :attribute trebuie să fie între :min și :max kilobyți.',
        'numeric' => 'Câmpul :attribute trebuie să fie între :min și :max.',
        'string'  => 'Câmpul :attribute trebuie să fie între :min și :max caractere.',
    ],
    'boolean'                => 'Câmpul :attribute trebuie să fie adevărat sau fals.',
    'can'                    => 'Câmpul :attribute conține o valoare neautorizată.',
    'confirmed'              => 'Confirmarea :attribute nu se potrivește.',
    'contains'               => 'Câmpul :attribute lipsește o valoare obligatorie.',
    'current_password'       => 'Parola e incorectă.',
    'date'                   => 'Câmpul :attribute nu este o dată validă.',
    'date_equals'            => 'Aceasta :attribute trebuie să fie o dată egală cu :date.',
    'date_format'            => 'Câmpul :attribute trebuie să fie în formatul :format.',
    'decimal'                => ':Attribute trebuie să aibă :decimal de zecimale.',
    'declined'               => 'Câmpul :attribute trebuie să fie declinat.',
    'declined_if'            => 'Câmpul :attribute trebuie să fie declinat când :other este :value.',
    'different'              => 'Câmpurile :attribute și :other trebuie să fie diferite.',
    'digits'                 => 'Câmpul :attribute trebuie să aibă :digits cifre.',
    'digits_between'         => 'Câmpul :attribute trebuie să aibă între :min și :max cifre.',
    'dimensions'             => 'Câmpul :attribute are dimensiuni de imagine nevalide.',
    'distinct'               => 'Câmpul :attribute are o valoare duplicat.',
    'doesnt_end_with'        => ':Attribute nu se poate termina cu una dintre următoarele valori: :values.',
    'doesnt_start_with'      => ':Attribute trebuie să nu înceapă cu una dintre următoarele valori: :values.',
    'email'                  => 'Câmpul :attribute trebuie să fie o adresă de e-mail validă.',
    'ends_with'              => 'Câmpul :attribute trebuie să se încheie cu una din următoarele valori: :values',
    'enum'                   => 'Câmpul :attribute selectat nu este valid.',
    'exists'                 => 'Câmpul :attribute selectat nu este valid.',
    'extensions'             => 'Câmpul :attribute trebuie să aibă una dintre următoarele extensii: :values.',
    'file'                   => 'Câmpul :attribute trebuie să fie un fișier.',
    'filled'                 => 'Câmpul :attribute trebuie completat.',
    'gt'                     => [
        'array'   => 'Câmpul :attribute trebuie să aibă mai multe de :value elemente.',
        'file'    => 'Câmpul :attribute trebuie să fie mai mare de :value kilobyți.',
        'numeric' => 'Câmpul :attribute trebuie să fie mai mare de :value.',
        'string'  => 'Câmpul :attribute trebuie să fie mai mare de :value caractere.',
    ],
    'gte'                    => [
        'array'   => 'Câmpul :attribute trebuie să aibă :value elemente sau mai multe.',
        'file'    => 'Câmpul :attribute trebuie să fie mai mare sau egal cu :value kilobyți.',
        'numeric' => 'Câmpul :attribute trebuie să fie mai mare sau egal cu :value.',
        'string'  => 'Câmpul :attribute trebuie să fie mai mare sau egal cu :value caractere.',
    ],
    'hex_color'              => 'Câmpul :attribute trebuie să fie o culoare hexazecimală validă.',
    'image'                  => 'Câmpul :attribute trebuie să fie o imagine.',
    'in'                     => 'Câmpul :attribute selectat nu este valid.',
    'in_array'               => 'Câmpul :attribute nu există în :other.',
    'in_array_keys'          => 'The :attribute field must contain at least one of the following keys: :values.',
    'integer'                => 'Câmpul :attribute trebuie să fie un număr întreg.',
    'ip'                     => 'Câmpul :attribute trebuie să fie o adresă IP validă.',
    'ipv4'                   => 'Câmpul :attribute trebuie să fie o adresă IPv4 validă.',
    'ipv6'                   => 'Câmpul :attribute trebuie să fie o adresă IPv6 validă.',
    'json'                   => 'Câmpul :attribute trebuie să fie un string JSON valid.',
    'list'                   => 'Câmpul :attribute trebuie să fie o listă.',
    'lowercase'              => ':Attribute trebuie să fie format doar din litere mici.',
    'lt'                     => [
        'array'   => 'Câmpul :attribute trebuie să aibă mai puțin de :value elemente.',
        'file'    => 'Câmpul :attribute trebuie să fie mai mic de :value kilobyți.',
        'numeric' => 'Câmpul :attribute trebuie să fie mai mic de :value.',
        'string'  => 'Câmpul :attribute trebuie să fie mai mic de :value caractere.',
    ],
    'lte'                    => [
        'array'   => 'Câmpul :attribute trebuie să aibă :value elemente sau mai puține.',
        'file'    => 'Câmpul :attribute trebuie să fie mai mic sau egal cu :value kilobyți.',
        'numeric' => 'Câmpul :attribute trebuie să fie mai mic sau egal cu :value.',
        'string'  => 'Câmpul :attribute trebuie să fie mai mic sau egal cu :value caractere.',
    ],
    'mac_address'            => 'Câmpul :attribute trebuie să fie o adresă MAC validă.',
    'max'                    => [
        'array'   => 'Câmpul :attribute nu poate avea mai mult de :max elemente.',
        'file'    => 'Câmpul :attribute nu poate avea mai mult de :max kilobyți.',
        'numeric' => 'Câmpul :attribute nu poate fi mai mare de :max.',
        'string'  => 'Câmpul :attribute nu poate avea mai mult de :max caractere.',
    ],
    'max_digits'             => ':Attribute nu trebuie să conțină mai mult de :max cifre.',
    'mimes'                  => 'Câmpul :attribute trebuie să fie un fișier de tipul: :values.',
    'mimetypes'              => 'Câmpul :attribute trebuie să fie un fișier de tipul: :values.',
    'min'                    => [
        'array'   => 'Câmpul :attribute trebuie să aibă cel puțin :min elemente.',
        'file'    => 'Câmpul :attribute trebuie să aibă cel puțin :min kilobyți.',
        'numeric' => 'Câmpul :attribute nu poate fi mai mic de :min.',
        'string'  => 'Câmpul :attribute trebuie să aibă cel puțin :min caractere.',
    ],
    'min_digits'             => ':Attribute trebuie să conțină cel puțin :min cifre.',
    'missing'                => 'Câmpul :attribute trebuie să lipsească.',
    'missing_if'             => 'Câmpul :attribute trebuie să lipsească când :other este :value.',
    'missing_unless'         => 'Câmpul :attribute trebuie să lipsească, cu excepția cazului în care :other este :value.',
    'missing_with'           => 'Câmpul :attribute trebuie să lipsească atunci când este prezent :values.',
    'missing_with_all'       => 'Câmpul :attribute trebuie să lipsească atunci când sunt prezente :values.',
    'multiple_of'            => ':Attribute trebuie să fie un multiplu de :value',
    'not_in'                 => 'Câmpul :attribute selectat nu este valid.',
    'not_regex'              => 'Câmpul :attribute nu are un format valid.',
    'numeric'                => 'Câmpul :attribute trebuie să fie un număr.',
    'password'               => [
        'letters'       => ':Attribute trebuie să conțină cel puțin o literă.',
        'mixed'         => ':Attribute trebuie să conțină cel puțin o literă mare și o literă mică.',
        'numbers'       => ':Attribute trebuie să conțină cel puțin un număr.',
        'symbols'       => ':Attribute trebuie să conțină cel puțin un simbol.',
        'uncompromised' => ':Attribute dat a apărut într-o scurgere de date. Vă rugăm să alegeți un alt :attribute.',
    ],
    'present'                => 'Câmpul :attribute trebuie să fie prezent.',
    'present_if'             => 'Câmpul :attribute trebuie să fie prezent când :other este :value.',
    'present_unless'         => 'Câmpul :attribute trebuie să fie prezent, cu excepția cazului în care :other este :value.',
    'present_with'           => 'Câmpul :attribute trebuie să fie prezent atunci când este prezent :values.',
    'present_with_all'       => 'Câmpul :attribute trebuie să fie prezent atunci când sunt prezenți :values.',
    'prohibited'             => 'Câmpul :attribute este interzis.',
    'prohibited_if'          => 'Câmpul :attribute este interzis atunci când :other este :value.',
    'prohibited_if_accepted' => 'The :attribute field is prohibited when :other is accepted.',
    'prohibited_if_declined' => 'The :attribute field is prohibited when :other is declined.',
    'prohibited_unless'      => 'Câmpul :attribute este interzis, cu excepția cazului în care :other este în :values.',
    'prohibits'              => 'Câmpul :attribute nu permite ca :other să fie prezent.',
    'regex'                  => 'Câmpul :attribute nu are un format valid.',
    'required'               => 'Câmpul :attribute este obligatoriu.',
    'required_array_keys'    => 'Câmpul :attribute trebuie să conțină valori pentru: :values.',
    'required_if'            => 'Câmpul :attribute este necesar când :other este :value.',
    'required_if_accepted'   => 'Câmpul :attribute este obligatoriu când :other este acceptat.',
    'required_if_declined'   => 'The :attribute field is required when :other is declined.',
    'required_unless'        => 'Câmpul :attribute este necesar, cu excepția cazului :other este in :values.',
    'required_with'          => 'Câmpul :attribute este necesar când există :values.',
    'required_with_all'      => 'Câmpul :attribute este necesar când există :values.',
    'required_without'       => 'Câmpul :attribute este necesar când nu există :values.',
    'required_without_all'   => 'Câmpul :attribute este necesar când niciuna dintre valorile :values nu există.',
    'same'                   => 'Câmpurile :attribute și :other trebuie să fie identice.',
    'size'                   => [
        'array'   => 'Câmpul :attribute trebuie să aibă :size elemente.',
        'file'    => 'Câmpul :attribute trebuie să aibă :size kilobyți.',
        'numeric' => 'Câmpul :attribute trebuie să fie :size.',
        'string'  => 'Câmpul :attribute trebuie să aibă :size caractere.',
    ],
    'starts_with'            => 'Câmpul :attribute trebuie să înceapă cu una din următoarele valori: :values',
    'string'                 => 'Câmpul :attribute trebuie să fie string.',
    'timezone'               => 'Câmpul :attribute trebuie să fie un fus orar valid.',
    'ulid'                   => ':Attribute trebuie să fie un ULID valid.',
    'unique'                 => 'Câmpul :attribute a fost deja folosit.',
    'uploaded'               => 'Câmpul :attribute nu a reușit încărcarea.',
    'uppercase'              => ':Attribute trebuie să fie majuscule.',
    'url'                    => 'Câmpul :attribute nu este un URL valid.',
    'uuid'                   => 'Câmpul :attribute trebuie să fie un cod UUID valid.',
    'attributes'             => [
        'address'                  => 'abordare',
        'affiliate_url'            => 'URL afiliat',
        'age'                      => 'vârstă',
        'amount'                   => 'Cantitate',
        'announcement'             => 'anunţ',
        'area'                     => 'zonă',
        'audience_prize'           => 'premiul publicului',
        'audience_winner'          => 'audience winner',
        'available'                => 'disponibil',
        'birthday'                 => 'zi de nastere',
        'body'                     => 'corp',
        'city'                     => 'oraș',
        'company'                  => 'company',
        'compilation'              => 'compilare',
        'concept'                  => 'concept',
        'conditions'               => 'conditii',
        'content'                  => 'conţinut',
        'contest'                  => 'contest',
        'country'                  => 'țară',
        'cover'                    => 'acoperi',
        'created_at'               => 'creat la',
        'creator'                  => 'creator',
        'currency'                 => 'valută',
        'current_password'         => 'Parola actuală',
        'customer'                 => 'client',
        'date'                     => 'Data',
        'date_of_birth'            => 'Data de nastere',
        'dates'                    => 'datele',
        'day'                      => 'zi',
        'deleted_at'               => 'șters la',
        'description'              => 'Descriere',
        'display_type'             => 'tipul de afișare',
        'district'                 => 'district',
        'duration'                 => 'durată',
        'email'                    => 'e-mail',
        'excerpt'                  => 'extras',
        'filter'                   => 'filtru',
        'finished_at'              => 'terminat la',
        'first_name'               => 'Nume',
        'gender'                   => 'gen',
        'grand_prize'              => 'grand prize',
        'group'                    => 'grup',
        'hour'                     => 'ora',
        'image'                    => 'imagine',
        'image_desktop'            => 'imagine de pe desktop',
        'image_main'               => 'imaginea principală',
        'image_mobile'             => 'imaginea mobilă',
        'images'                   => 'imagini',
        'is_audience_winner'       => 'este câștigătorul publicului',
        'is_hidden'                => 'este ascuns',
        'is_subscribed'            => 'este abonat',
        'is_visible'               => 'este vizibil',
        'is_winner'                => 'este câștigător',
        'items'                    => 'articole',
        'key'                      => 'cheie',
        'last_name'                => 'numele de familie',
        'lesson'                   => 'lecţie',
        'line_address_1'           => 'adresa de linie 1',
        'line_address_2'           => 'adresa de linie 2',
        'login'                    => 'log in',
        'message'                  => 'mesaj',
        'middle_name'              => 'al doilea prenume',
        'minute'                   => 'minut',
        'mobile'                   => 'mobil',
        'month'                    => 'lună',
        'name'                     => 'Nume',
        'national_code'            => 'cod national',
        'number'                   => 'număr',
        'password'                 => 'parola',
        'password_confirmation'    => 'Confirmarea parolei',
        'phone'                    => 'telefon',
        'photo'                    => 'fotografie',
        'portfolio'                => 'portofoliu',
        'postal_code'              => 'Cod poștal',
        'preview'                  => 'previzualizare',
        'price'                    => 'Preț',
        'product_id'               => 'ID-ul produsului',
        'product_uid'              => 'UID-ul produsului',
        'product_uuid'             => 'UUID produs',
        'promo_code'               => 'Cod promoțional',
        'province'                 => 'provincie',
        'quantity'                 => 'cantitate',
        'reason'                   => 'motiv',
        'recaptcha_response_field' => 'câmp de răspuns recaptcha',
        'referee'                  => 'arbitru',
        'referees'                 => 'arbitrii',
        'reject_reason'            => 'respinge motivul',
        'remember'                 => 'tine minte',
        'restored_at'              => 'restaurat la',
        'result_text_under_image'  => 'textul rezultat sub imagine',
        'role'                     => 'rol',
        'rule'                     => 'regulă',
        'rules'                    => 'reguli',
        'second'                   => 'al doilea',
        'sex'                      => 'sex',
        'shipment'                 => 'expediere',
        'short_text'               => 'text scurt',
        'size'                     => 'mărimea',
        'skills'                   => 'aptitudini',
        'slug'                     => 'melc',
        'specialization'           => 'specializare',
        'started_at'               => 'început la',
        'state'                    => 'stat',
        'status'                   => 'stare',
        'street'                   => 'stradă',
        'student'                  => 'student',
        'subject'                  => 'subiect',
        'tag'                      => 'etichetă',
        'tags'                     => 'Etichete',
        'teacher'                  => 'profesor',
        'terms'                    => 'termeni',
        'test_description'         => 'Descriere Test',
        'test_locale'              => 'locale de testare',
        'test_name'                => 'numele testului',
        'text'                     => 'text',
        'time'                     => 'timp',
        'title'                    => 'titlu',
        'type'                     => 'tip',
        'updated_at'               => 'actualizat la',
        'user'                     => 'utilizator',
        'username'                 => 'nume de utilizator',
        'value'                    => 'valoare',
        'winner'                   => 'winner',
        'work'                     => 'work',
        'year'                     => 'an',
    ],
];
eng.json {
    "(and :count more error)": "(and :count more error)",
    "(and :count more errors)": "(and :count more error)|(and :count more errors)|(and :count more errors)",
    "A decryption key is required.": "A decryption key is required.",
    "A new verification link has been sent to the email address you provided during registration.": "A new verification link has been sent to the email address you provided during registration.",
    "A new verification link has been sent to your email address.": "A new verification link has been sent to your email address.",
    "A reset link will be sent if the account exists.": "A reset link will be sent if the account exists.",
    "A Timeout Occurred": "A Timeout Occurred",
    "Accept": "Accept",
    "Accepted": "Accepted",
    "Action": "Action",
    "Actions": "Actions",
    "Add": "Add",
    "Add :name": "Add :name",
    "Admin": "Admin",
    "Agree": "Agree",
    "All rights reserved.": "All rights reserved.",
    "Already have an account?": "Already have an account?",
    "Already Reported": "Already Reported",
    "Appearance": "Appearance",
    "Archive": "Archive",
    "Are you sure you want to delete your account?": "Are you sure you want to delete your account?",
    "Assign": "Assign",
    "Associate": "Associate",
    "Attach": "Attach",
    "Bad Gateway": "Bad Gateway",
    "Bad Request": "Bad Request",
    "Bandwidth Limit Exceeded": "Bandwidth Limit Exceeded",
    "Browse": "Browse",
    "Cancel": "Cancel",
    "Choose": "Choose",
    "Choose :name": "Choose :name",
    "Choose File": "Choose File",
    "Choose Image": "Choose Image",
    "Click here to re-send the verification email.": "Click here to re-send the verification email.",
    "Click to copy": "Click to copy",
    "Client Closed Request": "Client Closed Request",
    "Close": "Close",
    "Collapse": "Collapse",
    "Collapse All": "Collapse All",
    "Comment": "Comment",
    "Confirm": "Confirm",
    "Confirm Password": "Confirm Password",
    "Confirm password": "Confirm password",
    "Conflict": "Conflict",
    "Connect": "Connect",
    "Connection Closed Without Response": "Connection Closed Without Response",
    "Connection Timed Out": "Connection Timed Out",
    "Continue": "Continue",
    "Create": "Create",
    "Create :name": "Create :name",
    "Create account": "Create account",
    "Create an account": "Create an account",
    "Created": "Created",
    "Current password": "Current password",
    "Dark": "Dark",
    "Dashboard": "Dashboard",
    "Delete": "Delete",
    "Delete :name": "Delete :name",
    "Delete account": "Delete account",
    "Delete your account and all of its resources": "Delete your account and all of its resources",
    "Detach": "Detach",
    "Details": "Details",
    "Disable": "Disable",
    "Discard": "Discard",
    "Documentation": "Documentation",
    "Don't have an account?": "Don't have an account?",
    "Done": "Done",
    "Down": "Down",
    "Duplicate": "Duplicate",
    "Duplicate :name": "Duplicate :name",
    "Edit": "Edit",
    "Edit :name": "Edit :name",
    "Email": "Email",
    "Email Address": "Email Address",
    "Email address": "Email address",
    "Email password reset link": "Email password reset link",
    "Enable": "Enable",
    "Encrypted environment file already exists.": "Encrypted environment file already exists.",
    "Encrypted environment file not found.": "Encrypted environment file not found.",
    "Ensure your account is using a long, random password to stay secure": "Ensure your account is using a long, random password to stay secure",
    "Enter your details below to create your account": "Enter your details below to create your account",
    "Enter your email and password below to log in": "Enter your email and password below to log in",
    "Enter your email to receive a password reset link": "Enter your email to receive a password reset link",
    "Environment file already exists.": "Environment file already exists.",
    "Environment file not found.": "Environment file not found.",
    "errors": "errors",
    "Expand": "Expand",
    "Expand All": "Expand All",
    "Expectation Failed": "Expectation Failed",
    "Explanation": "Explanation",
    "Export": "Export",
    "Export :name": "Export :name",
    "Failed Dependency": "Failed Dependency",
    "File": "File",
    "Files": "Files",
    "Forbidden": "Forbidden",
    "Forgot password": "Forgot password",
    "Forgot your password?": "Forgot your password?",
    "Found": "Found",
    "Full name": "Full name",
    "Gateway Timeout": "Gateway Timeout",
    "Go Home": "Go Home",
    "Go to page :page": "Go to page :page",
    "Gone": "Gone",
    "Hello!": "Hello!",
    "Hide": "Hide",
    "Hide :name": "Hide :name",
    "Home": "Home",
    "HTTP Version Not Supported": "HTTP Version Not Supported",
    "I'm a teapot": "I'm a teapot",
    "If you did not create an account, no further action is required.": "If you did not create an account, no further action is required.",
    "If you did not request a password reset, no further action is required.": "If you did not request a password reset, no further action is required.",
    "If you're having trouble clicking the \":actionText\" button, copy and paste the URL below\ninto your web browser:": "If you're having trouble clicking the \":actionText\" button, copy and paste the URL below\ninto your web browser:",
    "IM Used": "IM Used",
    "Image": "Image",
    "Impersonate": "Impersonate",
    "Impersonation": "Impersonation",
    "Import": "Import",
    "Import :name": "Import :name",
    "Insufficient Storage": "Insufficient Storage",
    "Internal Server Error": "Internal Server Error",
    "Introduction": "Introduction",
    "Invalid filename.": "Invalid filename.",
    "Invalid JSON was returned from the route.": "Invalid JSON was returned from the route.",
    "Invalid SSL Certificate": "Invalid SSL Certificate",
    "length": "length",
    "Length Required": "Length Required",
    "Light": "Light",
    "Like": "Like",
    "Load": "Load",
    "Localize": "Localize",
    "Location": "Location",
    "Locked": "Locked",
    "Log In": "Log In",
    "Log in": "Log in",
    "log in": "log in",
    "Log in to your account": "Log in to your account",
    "Log Out": "Log Out",
    "Log out": "Log out",
    "Login": "Login",
    "Logout": "Logout",
    "Loop Detected": "Loop Detected",
    "Maintenance Mode": "Maintenance Mode",
    "Manage your profile and account settings": "Manage your profile and account settings",
    "Method Not Allowed": "Method Not Allowed",
    "Misdirected Request": "Misdirected Request",
    "Moved Permanently": "Moved Permanently",
    "Multi-Status": "Multi-Status",
    "Multiple Choices": "Multiple Choices",
    "Name": "Name",
    "Network Authentication Required": "Network Authentication Required",
    "Network Connect Timeout Error": "Network Connect Timeout Error",
    "Network Read Timeout Error": "Network Read Timeout Error",
    "New": "New",
    "New :name": "New :name",
    "New password": "New password",
    "No": "No",
    "No Content": "No Content",
    "Non-Authoritative Information": "Non-Authoritative Information",
    "Not Acceptable": "Not Acceptable",
    "Not Extended": "Not Extended",
    "Not Found": "Not Found",
    "Not Implemented": "Not Implemented",
    "Not Modified": "Not Modified",
    "of": "of",
    "OK": "OK",
    "Once your account is deleted, all of its resources and data will also be permanently deleted. Please confirm you would like to permanently delete your account.": "Once your account is deleted, all of its resources and data will also be permanently deleted. Please confirm you would like to permanently delete your account.",
    "Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.": "Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.",
    "Open": "Open",
    "Open in a current window": "Open in a current window",
    "Open in a new window": "Open in a new window",
    "Open in a parent frame": "Open in a parent frame",
    "Open in the topmost frame": "Open in the topmost frame",
    "Open on the website": "Open on the website",
    "Or, return to": "Or, return to",
    "Origin Is Unreachable": "Origin Is Unreachable",
    "Page Expired": "Page Expired",
    "Pagination Navigation": "Pagination Navigation",
    "Partial Content": "Partial Content",
    "Password": "Password",
    "Payload Too Large": "Payload Too Large",
    "Payment Required": "Payment Required",
    "Permanent Redirect": "Permanent Redirect",
    "Platform": "Platform",
    "Please click the button below to verify your email address.": "Please click the button below to verify your email address.",
    "Please enter your new password below": "Please enter your new password below",
    "Please verify your email address by clicking on the link we just emailed to you.": "Please verify your email address by clicking on the link we just emailed to you.",
    "Precondition Failed": "Precondition Failed",
    "Precondition Required": "Precondition Required",
    "Preview": "Preview",
    "Price": "Price",
    "Processing": "Processing",
    "Profile": "Profile",
    "Proxy Authentication Required": "Proxy Authentication Required",
    "Railgun Error": "Railgun Error",
    "Range Not Satisfiable": "Range Not Satisfiable",
    "Record": "Record",
    "Regards,": "Regards,",
    "Register": "Register",
    "Remember me": "Remember me",
    "Repository": "Repository",
    "Request Header Fields Too Large": "Request Header Fields Too Large",
    "Request Timeout": "Request Timeout",
    "Resend verification email": "Resend verification email",
    "Reset Content": "Reset Content",
    "Reset Password": "Reset Password",
    "Reset password": "Reset password",
    "Reset Password Notification": "Reset Password Notification",
    "Restore": "Restore",
    "Restore :name": "Restore :name",
    "results": "results",
    "Retry With": "Retry With",
    "Save": "Save",
    "Save & Close": "Save & Close",
    "Save & Return": "Save & Return",
    "Save :name": "Save :name",
    "Saved.": "Saved.",
    "Search": "Search",
    "Search :name": "Search :name",
    "See Other": "See Other",
    "Select": "Select",
    "Select All": "Select All",
    "Send": "Send",
    "Server Error": "Server Error",
    "Service Unavailable": "Service Unavailable",
    "Session Has Expired": "Session Has Expired",
    "Settings": "Settings",
    "Show": "Show",
    "Show :name": "Show :name",
    "Show All": "Show All",
    "Showing": "Showing",
    "Sign In": "Sign In",
    "Sign up": "Sign up",
    "Solve": "Solve",
    "SSL Handshake Failed": "SSL Handshake Failed",
    "Start": "Start",
    "Stop": "Stop",
    "Submit": "Submit",
    "Subscribe": "Subscribe",
    "Switch": "Switch",
    "Switch To Role": "Switch To Role",
    "Switching Protocols": "Switching Protocols",
    "System": "System",
    "Tag": "Tag",
    "Tags": "Tags",
    "Temporary Redirect": "Temporary Redirect",
    "The given data was invalid.": "The given data was invalid.",
    "The response is not a streamed response.": "The response is not a streamed response.",
    "The response is not a view.": "The response is not a view.",
    "This action is unauthorized.": "This action is unauthorized.",
    "This is a secure area of the application. Please confirm your password before continuing.": "This is a secure area of the application. Please confirm your password before continuing.",
    "This password reset link will expire in :count minutes.": "This password reset link will expire in :count minutes.",
    "to": "to",
    "Toggle navigation": "Toggle navigation",
    "Too Early": "Too Early",
    "Too Many Requests": "Too Many Requests",
    "Translate": "Translate",
    "Translate It": "Translate It",
    "Unauthorized": "Unauthorized",
    "Unavailable For Legal Reasons": "Unavailable For Legal Reasons",
    "Unknown Error": "Unknown Error",
    "Unpack": "Unpack",
    "Unprocessable Entity": "Unprocessable Entity",
    "Unsubscribe": "Unsubscribe",
    "Unsupported Media Type": "Unsupported Media Type",
    "Up": "Up",
    "Update": "Update",
    "Update :name": "Update :name",
    "Update password": "Update password",
    "Update the appearance settings for your account": "Update the appearance settings for your account",
    "Update your account's appearance settings": "Update your account's appearance settings",
    "Update your name and email address": "Update your name and email address",
    "Upgrade Required": "Upgrade Required",
    "URI Too Long": "URI Too Long",
    "Use Proxy": "Use Proxy",
    "User": "User",
    "Variant Also Negotiates": "Variant Also Negotiates",
    "Verify Email Address": "Verify Email Address",
    "View": "View",
    "View :name": "View :name",
    "Web Server is Down": "Web Server is Down",
    "Whoops!": "Whoops!",
    "Yes": "Yes",
    "You are receiving this email because we received a password reset request for your account.": "You are receiving this email because we received a password reset request for your account.",
    "Your email address is unverified.": "Your email address is unverified.",
    "blog": {
        "title": "Blog",
        "subtitle": "Ultimele noutăți și articole",
        "reading_time": "min de lectură",
        "read_more": "Citește mai mult",
        "recent_posts": "Ultimele articole"
    }
}
ro.json {
    "(and :count more error)": "(și încă :count eroare)",
    "(and :count more errors)": "(și încă :count eroare)|(și încă :count erori)|(și încă :count de erori)",
    "A decryption key is required.": "Este necesară o cheie de decriptare.",
    "A new verification link has been sent to the email address you provided during registration.": "Un nou link de verificare a fost trimis la adresa de e-mail pe care ați furnizat-o în timpul înregistrării.",
    "A new verification link has been sent to your email address.": "Un nou link de verificare a fost trimis la adresa dvs. de e-mail.",
    "A reset link will be sent if the account exists.": "Un link de resetare va fi trimis dacă contul există.",
    "A Timeout Occurred": "A apărut o expirare a timpului (Timeout)",
    "Accept": "Acceptă",
    "Accepted": "Acceptat",
    "Action": "Acțiune",
    "Actions": "Acțiuni",
    "Add": "Adaugă",
    "Add :name": "Adaugă :name",
    "Admin": "Administrator",
    "Agree": "De acord",
    "All rights reserved.": "Toate drepturile rezervate.",
    "Already have an account?": "Ai deja un cont?",
    "Already Reported": "Deja raportat",
    "Appearance": "Aspect",
    "Archive": "Arhivează",
    "Are you sure you want to delete your account?": "Ești sigur că vrei să-ți ștergi contul?",
    "Assign": "Atribuie",
    "Associate": "Asociază",
    "Attach": "Atașează",
    "Bad Gateway": "Gateway defectuos",
    "Bad Request": "Solicitare greșită",
    "Bandwidth Limit Exceeded": "Limita de lățime de bandă a fost depășită",
    "Browse": "Răsfoiește",
    "Cancel": "Anulează",
    "Choose": "Alege",
    "Choose :name": "Alege :name",
    "Choose File": "Alege fișierul",
    "Choose Image": "Alege imaginea",
    "Click here to re-send the verification email.": "Click aici pentru a retrimite e-mailul de verificare.",
    "Click to copy": "Click pentru a copia",
    "Client Closed Request": "Clientul a închis solicitarea",
    "Close": "Închide",
    "Collapse": "Restrânge",
    "Collapse All": "Restrânge toate",
    "Comment": "Comentariu",
    "Confirm": "Confirmă",
    "Confirm Password": "Confirmă parola",
    "Confirm password": "Confirmă parola",
    "Conflict": "Conflict",
    "Connect": "Conectează",
    "Connection Closed Without Response": "Conexiune închisă fără răspuns",
    "Connection Timed Out": "Conexiunea a expirat",
    "Continue": "Continuă",
    "Create": "Creează",
    "Create :name": "Creează :name",
    "Create account": "Creează cont",
    "Create an account": "Creează un cont",
    "Created": "Creat",
    "Current password": "Parola actuală",
    "Dark": "Întunecat",
    "Dashboard": "Panou de control",
    "Delete": "Șterge",
    "Delete :name": "Șterge :name",
    "Delete account": "Șterge contul",
    "Delete your account and all of its resources": "Șterge-ți contul și toate resursele acestuia",
    "Detach": "Detașează",
    "Details": "Detalii",
    "Disable": "Dezactivează",
    "Discard": "Renunță",
    "Documentation": "Documentație",
    "Don't have an account?": "Nu ai un cont?",
    "Done": "Gata",
    "Down": "Jos",
    "Duplicate": "Duplică",
    "Duplicate :name": "Duplică :name",
    "Edit": "Editează",
    "Edit :name": "Editează :name",
    "Email": "E-mail",
    "Email Address": "Adresă de e-mail",
    "Email address": "Adresă de e-mail",
    "Email password reset link": "Trimite linkul de resetare a parolei prin e-mail",
    "Enable": "Activează",
    "Encrypted environment file already exists.": "Fișierul de mediu criptat există deja.",
    "Encrypted environment file not found.": "Fișierul de mediu criptat nu a fost găsit.",
    "Ensure your account is using a long, random password to stay secure": "Asigură-te că contul tău folosește o parolă lungă și aleatoare pentru a rămâne sigur",
    "Enter your details below to create your account": "Introdu detaliile mai jos pentru a-ți crea contul",
    "Enter your email and password below to log in": "Introdu e-mailul și parola mai jos pentru a te autentifica",
    "Enter your email to receive a password reset link": "Introdu e-mailul pentru a primi un link de resetare a parolei",
    "Environment file already exists.": "Fișierul de mediu există deja.",
    "Environment file not found.": "Fișierul de mediu nu a fost găsit.",
    "errors": "erori",
    "Expand": "Extinde",
    "Expand All": "Extinde toate",
    "Expectation Failed": "Așteptarea a eșuat",
    "Explanation": "Explicație",
    "Export": "Exportă",
    "Export :name": "Exportă :name",
    "Failed Dependency": "Dependență eșuată",
    "File": "Fișier",
    "Files": "Fișiere",
    "Forbidden": "Interzis",
    "Forgot password": "Parolă uitată",
    "Forgot your password?": "Ai uitat parola?",
    "Found": "Găsit",
    "Full name": "Nume complet",
    "Gateway Timeout": "Expirare timp gateway",
    "Go Home": "Mergi acasă",
    "Go to page :page": "Mergi la pagina :page",
    "Gone": "Dispărut",
    "Hello!": "Salut!",
    "Hide": "Ascunde",
    "Hide :name": "Ascunde :name",
    "Home": "Acasă",
    "HTTP Version Not Supported": "Versiune HTTP neacceptată",
    "I'm a teapot": "Sunt o ceașcă de ceai",
    "If you did not create an account, no further action is required.": "Dacă nu ai creat un cont, nu este necesară nicio acțiune suplimentară.",
    "If you did not request a password reset, no further action is required.": "Dacă nu ai solicitat resetarea parolei, nu este necesară nicio acțiune suplimentară.",
    "If you're having trouble clicking the \":actionText\" button, copy and paste the URL below\ninto your web browser:": "Dacă ai probleme la apăsarea butonului \":actionText\", copiază și lipește URL-ul de mai jos în browserul tău web:",
    "IM Used": "IM utilizat",
    "Image": "Imagine",
    "Impersonate": "Impersonalizează",
    "Impersonation": "Impersonalizare",
    "Import": "Importă",
    "Import :name": "Importă :name",
    "Insufficient Storage": "Spațiu de stocare insuficient",
    "Internal Server Error": "Eroare internă de server",
    "Introduction": "Introducere",
    "Invalid filename.": "Nume de fișier invalid.",
    "Invalid JSON was returned from the route.": "Un JSON invalid a fost returnat de la rută.",
    "Invalid SSL Certificate": "Certificat SSL invalid",
    "length": "lungime",
    "Length Required": "Lungime necesară",
    "Light": "Luminos",
    "Like": "Îmi place",
    "Load": "Încarcă",
    "Localize": "Localizează",
    "Location": "Locație",
    "Locked": "Blocat",
    "Log In": "Autentificare",
    "Log in": "Autentificare",
    "log in": "autentificare",
    "Log in to your account": "Autentifică-te în contul tău",
    "Log Out": "Deconectare",
    "Log out": "Deconectare",
    "Login": "Autentificare",
    "Logout": "Deconectare",
    "Loop Detected": "Buclă detectată",
    "Maintenance Mode": "Modul de întreținere",
    "Manage your profile and account settings": "Gestionează-ți profilul și setările contului",
    "Method Not Allowed": "Metodă nepermisă",
    "Misdirected Request": "Solicitare greșit direcționată",
    "Moved Permanently": "Mutat permanent",
    "Multi-Status": "Stare multiplă",
    "Multiple Choices": "Alegeri multiple",
    "Name": "Nume",
    "Network Authentication Required": "Autentificare în rețea necesară",
    "Network Connect Timeout Error": "Eroare de expirare a conexiunii în rețea",
    "Network Read Timeout Error": "Eroare de expirare la citirea din rețea",
    "New": "Nou",
    "New :name": "Nou :name",
    "New password": "Parolă nouă",
    "No": "Nu",
    "No Content": "Fără conținut",
    "Non-Authoritative Information": "Informații neautoritative",
    "Not Acceptable": "Inacceptabil",
    "Not Extended": "Neextins",
    "Not Found": "Negăsit",
    "Not Implemented": "Neimplementat",
    "Not Modified": "Nemodificat",
    "of": "din",
    "OK": "OK",
    "Once your account is deleted, all of its resources and data will also be permanently deleted. Please confirm you would like to permanently delete your account.": "Odată ce contul tău este șters, toate resursele și datele acestuia vor fi șterse permanent. Te rugăm să confirmi că dorești să ștergi permanent contul tău.",
    "Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.": "Odată ce contul tău este șters, toate resursele și datele acestuia vor fi șterse permanent. Te rugăm să introduci parola pentru a confirma că dorești să ștergi permanent contul tău.",
    "Open": "Deschide",
    "Open in a current window": "Deschide în fereastra curentă",
    "Open in a new window": "Deschide într-o fereastră nouă",
    "Open in a parent frame": "Deschide într-un cadru părinte",
    "Open in the topmost frame": "Deschide în cel mai de sus cadru",
    "Open on the website": "Deschide pe site",
    "Or, return to": "Sau, revino la",
    "Origin Is Unreachable": "Originea este inaccesibilă",
    "Page Expired": "Pagina a expirat",
    "Pagination Navigation": "Navigare paginare",
    "Partial Content": "Conținut parțial",
    "Password": "Parolă",
    "Payload Too Large": "Dimensiunea datelor prea mare",
    "Payment Required": "Plată necesară",
    "Permanent Redirect": "Redirecționare permanentă",
    "Platform": "Platformă",
    "Please click the button below to verify your email address.": "Te rugăm să apeși butonul de mai jos pentru a-ți verifica adresa de e-mail.",
    "Please enter your new password below": "Te rugăm să introduci noua ta parolă mai jos",
    "Please verify your email address by clicking on the link we just emailed to you.": "Te rugăm să-ți verifici adresa de e-mail apăsând pe linkul pe care tocmai ți l-am trimis.",
    "Precondition Failed": "Condiția prealabilă a eșuat",
    "Precondition Required": "Condiție prealabilă necesară",
    "Preview": "Previzualizare",
    "Price": "Preț",
    "Processing": "Se procesează",
    "Profile": "Profil",
    "Proxy Authentication Required": "Autentificare proxy necesară",
    "Railgun Error": "Eroare Railgun",
    "Range Not Satisfiable": "Interval nesatisfăcător",
    "Record": "Înregistrare",
    "Regards,": "Cu respect,",
    "Register": "Înregistrează-te",
    "Remember me": "Ține-mă minte",
    "Repository": "Depozit",
    "Request Header Fields Too Large": "Câmpurile antetului cererii sunt prea mari",
    "Request Timeout": "Timpul cererii a expirat",
    "Resend verification email": "Retrimite e-mailul de verificare",
    "Reset Content": "Resetează conținutul",
    "Reset Password": "Resetează parola",
    "Reset password": "Resetează parola",
    "Reset Password Notification": "Notificare resetare parolă",
    "Restore": "Restaurează",
    "Restore :name": "Restaurează :name",
    "results": "rezultate",
    "Retry With": "Reîncearcă cu",
    "Save": "Salvează",
    "Save & Close": "Salvează și închide",
    "Save & Return": "Salvează și revină",
    "Save :name": "Salvează :name",
    "Saved.": "Salvat.",
    "Search": "Caută",
    "Search :name": "Caută :name",
    "See Other": "Vezi altul",
    "Select": "Selectează",
    "Select All": "Selectează tot",
    "Send": "Trimite",
    "Server Error": "Eroare de server",
    "Service Unavailable": "Serviciu indisponibil",
    "Session Has Expired": "Sesiunea a expirat",
    "Settings": "Setări",
    "Show": "Afișează",
    "Show :name": "Afișează :name",
    "Show All": "Afișează tot",
    "Showing": "Se afișează",
    "Sign In": "Autentificare",
    "Sign up": "Înregistrare",
    "Solve": "Rezolvă",
    "SSL Handshake Failed": "Strângerea de mână SSL a eșuat",
    "Start": "Pornește",
    "Stop": "Oprește",
    "Submit": "Trimite",
    "Subscribe": "Abonează-te",
    "Switch": "Comută",
    "Switch To Role": "Comută la rolul",
    "Switching Protocols": "Comutare protocoale",
    "System": "Sistem",
    "Tag": "Etichetă",
    "Tags": "Etichete",
    "Temporary Redirect": "Redirecționare temporară",
    "The given data was invalid.": "Datele furnizate au fost invalide.",
    "The response is not a streamed response.": "Răspunsul nu este un răspuns transmis în flux.",
    "The response is not a view.": "Răspunsul nu este o vizualizare.",
    "This action is unauthorized.": "Această acțiune nu este autorizată.",
    "This is a secure area of the application. Please confirm your password before continuing.": "Aceasta este o zonă securizată a aplicației. Te rugăm să-ți confirmi parola înainte de a continua.",
    "This password reset link will expire in :count minutes.": "Acest link de resetare a parolei va expira în :count minute.",
    "to": "la",
    "Toggle navigation": "Comută navigarea",
    "Too Early": "Prea devreme",
    "Too Many Requests": "Prea multe solicitări",
    "Translate": "Tradu",
    "Translate It": "Tradu-l",
    "Unauthorized": "Neautorizat",
    "Unavailable For Legal Reasons": "Indisponibil din motive legale",
    "Unknown Error": "Eroare necunoscută",
    "Unpack": "Despachetează",
    "Unprocessable Entity": "Entitate neprocesabilă",
    "Unsubscribe": "Dezabonează-te",
    "Unsupported Media Type": "Tip de media neacceptat",
    "Up": "Sus",
    "Update": "Actualizează",
    "Update :name": "Actualizează :name",
    "Update password": "Actualizează parola",
    "Update the appearance settings for your account": "Actualizează setările de aspect pentru contul tău",
    "Update your account's appearance settings": "Actualizează setările de aspect ale contului tău",
    "Update your name and email address": "Actualizează-ți numele și adresa de e-mail",
    "Upgrade Required": "Actualizare necesară",
    "URI Too Long": "URI prea lung",
    "Use Proxy": "Folosește proxy",
    "User": "Utilizator",
    "Variant Also Negotiates": "Varianta negociază și",
    "Verify Email Address": "Verifică adresa de e-mail",
    "View": "Vizualizează",
    "View :name": "Vizualizează :name",
    "Web Server is Down": "Serverul web este oprit",
    "Whoops!": "Hopa!",
    "Yes": "Da",
    "You are receiving this email because we received a password reset request for your account.": "Primești acest e-mail deoarece am primit o solicitare de resetare a parolei pentru contul tău.",
    "Your email address is unverified.": "Adresa ta de e-mail nu este verificată.",
    "blog": {
        "title": "Blog",
        "subtitle": "Ultimele noutăți și articole",
        "reading_time": "min de lectură",
        "read_more": "Citește mai mult",
        "recent_posts": "Ultimele articole"
    }
}


resorces/views blog :index.blade.php @extends('layouts.app')

@section('content')
<section class="py-20 bg-black">
    <div class="container max-w-4xl">
        <article>
            @if($post->featured_image)
                <div class="aspect-video rounded-2xl overflow-hidden mb-8">
                    <img src="{{ $post->image_url }}" 
                         alt="{{ $post->title }}"
                         class="w-full h-full object-cover">
                </div>
            @endif
            
            <header class="mb-8">
                <div class="flex items-center text-gray-400 mb-4">
                    <span>{{ $post->user->name }}</span>
                    <span class="mx-2">•</span>
                    <time>{{ $post->published_at->format('M d, Y') }}</time>
                    <span class="mx-2">•</span>
                    <span>{{ $post->reading_time }} {{ __('blog.reading_time') }}</span>
                </div>
                
                <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">{{ $post->title }}</h1>
                
                @if($post->meta_keywords)
                    <div class="flex flex-wrap gap-2">
                        @foreach($post->meta_keywords as $keyword)
                            <span class="px-3 py-1 bg-purple-500/20 text-purple-300 rounded-full text-sm">
                                {{ $keyword }}
                            </span>
                        @endforeach
                    </div>
                @endif
            </header>
            
            <div class="prose prose-invert prose-lg max-w-none">
                {!! $post->content !!}
            </div>
        </article>

        @if($recentPosts->count() > 0)
            <section class="mt-16 pt-16 border-t border-white/10">
                <h2 class="text-2xl font-bold text-white mb-8">{{ __('blog.recent_posts') }}</h2>
                <div class="grid md:grid-cols-3 gap-6">
                    @foreach($recentPosts as $recentPost)
                        <article class="group">
                            @if($recentPost->featured_image)
                                <div class="aspect-video rounded-xl overflow-hidden mb-4">
                                    <img src="{{ $recentPost->image_url }}" 
                                         alt="{{ $recentPost->title }}"
                                         class="w-full h-full object-cover group-hover:scale-105 transition-transform">
                                </div>
                            @endif
                            
                            <h3 class="text-lg font-semibold text-white group-hover:text-purple-400">
                                <a href="{{ route('blog.show', $recentPost->slug) }}">{{ $recentPost->title }}</a>
                            </h3>
                        </article>
                    @endforeach
                </div>
            </section>
        @endif
    </div>
</section>
@endsection
show.blade.php @extends('layouts.app')

@section('content')
<section class="py-20 bg-black">
    <div class="container max-w-4xl">
        <article>
            @if($post->featured_image)
                <div class="aspect-video rounded-2xl overflow-hidden mb-8">
                    <img src="{{ $post->image_url }}" 
                         alt="{{ $post->title }}"
                         class="w-full h-full object-cover">
                </div>
            @endif
            
            <header class="mb-8">
                <div class="flex items-center text-gray-400 mb-4">
                    <span>{{ $post->user->name }}</span>
                    <span class="mx-2">•</span>
                    <time>{{ $post->published_at->format('M d, Y') }}</time>
                    <span class="mx-2">•</span>
                    <span>{{ $post->reading_time }} {{ __('blog.reading_time') }}</span>
                </div>
                
                <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">{{ $post->title }}</h1>
                
                @if($post->meta_keywords)
                    <div class="flex flex-wrap gap-2">
                        @foreach($post->meta_keywords as $keyword)
                            <span class="px-3 py-1 bg-purple-500/20 text-purple-300 rounded-full text-sm">
                                {{ $keyword }}
                            </span>
                        @endforeach
                    </div>
                @endif
            </header>
            
            <div class="prose prose-invert prose-lg max-w-none">
                {!! $post->content !!}
            </div>
        </article>

        @if($recentPosts->count() > 0)
            <section class="mt-16 pt-16 border-t border-white/10">
                <h2 class="text-2xl font-bold text-white mb-8">{{ __('blog.recent_posts') }}</h2>
                <div class="grid md:grid-cols-3 gap-6">
                    @foreach($recentPosts as $recentPost)
                        <article class="group">
                            @if($recentPost->featured_image)
                                <div class="aspect-video rounded-xl overflow-hidden mb-4">
                                    <img src="{{ $recentPost->image_url }}" 
                                         alt="{{ $recentPost->title }}"
                                         class="w-full h-full object-cover group-hover:scale-105 transition-transform">
                                </div>
                            @endif
                            
                            <h3 class="text-lg font-semibold text-white group-hover:text-purple-400">
                                <a href="{{ route('blog.show', $recentPost->slug) }}">{{ $recentPost->title }}</a>
                            </h3>
                        </article>
                    @endforeach
                </div>
            </section>
        @endif
    </div>
</section>
@endsection
contact.blade.php @extends('layouts.app')

@section('content')
<!-- Contact Section cu design modern și animații -->
<section id="contact" class="py-32 relative bg-black overflow-hidden min-h-screen flex items-center">
  <!-- Background Effects -->
  <div class="absolute inset-0 z-0">
    <!-- Gradient Orbs -->
    <div class="absolute top-20 left-1/4 w-96 h-96 bg-purple-600/20 rounded-full blur-[120px] animate-pulse-slow"></div>
    <div class="absolute bottom-20 right-1/4 w-80 h-80 bg-blue-600/20 rounded-full blur-[100px] animate-pulse-slow delay-1000"></div>
    
    <!-- Subtle Pattern -->
    <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width="100" height="100" xmlns="http://www.w3.org/2000/svg"%3E%3Cdefs%3E%3Cpattern id="dot" width="100" height="100" patternUnits="userSpaceOnUse"%3E%3Ccircle cx="50" cy="50" r="1" fill="rgba(255,255,255,0.05)"/%3E%3C/pattern%3E%3C/defs%3E%3Crect width="100%25" height="100%25" fill="url(%23dot)"/%3E%3C/svg%3E')] opacity-100"></div>
  </div>
  
  <div class="container relative z-10">
    <div class="grid lg:grid-cols-2 gap-16 items-center">
      <!-- Contact Info Side -->
      <div class="space-y-8 animate-fade-in-left">
        <!-- Header -->
        <div>
          <span class="text-purple-400 font-medium tracking-wider uppercase text-sm block mb-4">Get in Touch</span>
          <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold">
            <span class="bg-gradient-to-r from-purple-400 via-blue-400 to-cyan-400 bg-clip-text text-transparent animate-gradient-x">
              {{ __('pages.contact_h1') }}
            </span>
          </h1>
          <p class="text-xl text-gray-400 mt-6">
            Let's discuss your project ideas or just say hello. I'm always open to new opportunities and collaborations.
          </p>
        </div>
        
        <!-- Contact Details -->
        <div class="space-y-6">
          <div class="group flex items-center space-x-4">
            <div class="w-12 h-12 bg-gradient-to-br from-purple-600 to-blue-600 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
              <i class="fas fa-envelope text-white"></i>
            </div>
            <div>
              <span class="text-gray-400 text-sm">Email</span>
              <p class="text-white font-medium">your.email@example.com</p>
            </div>
          </div>
          
          <div class="group flex items-center space-x-4">
            <div class="w-12 h-12 bg-gradient-to-br from-blue-600 to-cyan-600 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
              <i class="fas fa-phone-alt text-white"></i>
            </div>
            <div>
              <span class="text-gray-400 text-sm">Phone</span>
              <p class="text-white font-medium">+40 123 456 789</p>
            </div>
          </div>
          
          <div class="group flex items-center space-x-4">
            <div class="w-12 h-12 bg-gradient-to-br from-cyan-600 to-purple-600 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
              <i class="fas fa-map-marker-alt text-white"></i>
            </div>
            <div>
              <span class="text-gray-400 text-sm">Location</span>
              <p class="text-white font-medium">Bucharest, Romania</p>
            </div>
          </div>
        </div>
        
        <!-- Social Links -->
        <div class="flex space-x-4 pt-4">
          @foreach([
            ['github', 'fab fa-github', 'https://github.com/yourusername'],
            ['linkedin', 'fab fa-linkedin', 'https://linkedin.com/in/yourusername'],
            ['twitter', 'fab fa-twitter', 'https://twitter.com/yourusername'],
            ['instagram', 'fab fa-instagram', 'https://instagram.com/yourusername']
          ] as $social)
          <a href="{{ $social[2] }}" target="_blank" class="group relative">
            <div class="absolute -inset-1 bg-gradient-to-r from-purple-600 to-blue-600 rounded-lg opacity-0 blur group-hover:opacity-60 transition duration-300"></div>
            <div class="relative w-12 h-12 bg-white/5 backdrop-blur-sm border border-white/10 rounded-lg flex items-center justify-center group-hover:bg-white/10 group-hover:border-white/20 transition-all duration-300">
              <i class="{{ $social[1] }} text-gray-400 group-hover:text-white transition-colors duration-300"></i>
            </div>
          </a>
          @endforeach
        </div>
      </div>
      
      <!-- Contact Form Side -->
      <div class="relative animate-fade-in-right delay-200">
        <!-- Form Card -->
        <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-3xl p-8 shadow-lg shadow-purple-500/10">
          <form action="{{ route('contact.submit', app()->getLocale()) }}" method="POST" class="space-y-6">
            @csrf
            
            <!-- Name Input -->
            <div class="relative group">
              <label for="name" class="absolute -top-2 left-4 bg-black px-2 text-sm text-gray-400 group-focus-within:text-purple-400 transition-colors duration-300">Your Name</label>
              <input type="text" id="name" name="name" required class="w-full px-4 py-3 bg-white/5 border {{ $errors->has('name') ? 'border-red-500' : 'border-white/10' }} rounded-xl text-white focus:border-purple-500 focus:bg-white/10 transition-all duration-300 outline-none">
              @error('name')
                <p class="text-red-400 text-xs mt-1">{{ $message }}</p>
              @enderror
            </div>
            
            <!-- Email Input -->
            <div class="relative group">
              <label for="email" class="absolute -top-2 left-4 bg-black px-2 text-sm text-gray-400 group-focus-within:text-purple-400 transition-colors duration-300">Email Address</label>
              <input type="email" id="email" name="email" required class="w-full px-4 py-3 bg-white/5 border {{ $errors->has('email') ? 'border-red-500' : 'border-white/10' }} rounded-xl text-white focus:border-purple-500 focus:bg-white/10 transition-all duration-300 outline-none">
              @error('email')
                <p class="text-red-400 text-xs mt-1">{{ $message }}</p>
              @enderror
            </div>
            
            <!-- Message Input -->
            <div class="relative group">
              <label for="message" class="absolute -top-2 left-4 bg-black px-2 text-sm text-gray-400 group-focus-within:text-purple-400 transition-colors duration-300">Your Message</label>
              <textarea id="message" name="message" rows="5" required class="w-full px-4 py-3 bg-white/5 border {{ $errors->has('message') ? 'border-red-500' : 'border-white/10' }} rounded-xl text-white focus:border-purple-500 focus:bg-white/10 transition-all duration-300 outline-none resize-none"></textarea>
              @error('message')
                <p class="text-red-400 text-xs mt-1">{{ $message }}</p>
              @enderror
            </div>
            
            <!-- Submit Button -->
            <button type="submit" class="w-full px-6 py-3 rounded-xl bg-gradient-to-r from-purple-600 to-blue-600 text-white font-medium shadow-lg shadow-purple-500/25 hover:shadow-purple-500/40 hover:scale-105 transition-all duration-300">
              Send Message
              <i class="fas fa-paper-plane ml-2"></i>
            </button>
          </form>
        </div>
        
        <!-- Success/Error Messages -->
        @if(session('success'))
        <div class="mt-4 p-4 rounded-xl bg-green-500/10 border border-green-500 text-green-400 text-center">
          {{ session('success') }}
        </div>
        @endif
      </div>
    </div>
  </div>
</section>
@endsection

<!-- ... stilurile și script-urile rămân la fel ca înainte ... -->n

<!-- Adaugă stiluri custom pentru animații -->
<style>
@keyframes pulse-slow {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

@keyframes gradient-x {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

.animate-pulse-slow {
  animation: pulse-slow 6s ease-in-out infinite;
}

.animate-gradient-x {
  background-size: 200% 200%;
  animation: gradient-x 3s ease infinite;
}

.animate-fade-in-left {
  animation: fade-in-left 0.8s ease-out forwards;
}

.animate-fade-in-right {
  animation: fade-in-right 0.8s ease-out forwards;
}

@keyframes fade-in-left {
  from { opacity: 0; transform: translateX(-50px); }
  to { opacity: 1; transform: translateX(0); }
}

@keyframes fade-in-right {
  from { opacity: 0; transform: translateX(50px); }
  to { opacity: 1; transform: translateX(0); }
}
</style>

home.blade.php @extends('layouts.app')

@section('content')
<!-- Hero Section cu design ultra-modern -->
<section class="hero min-h-screen flex items-center relative overflow-hidden bg-black">
  <!-- Animated Background -->
  <div class="absolute inset-0 z-0">
    <!-- Gradient Orbs cu animații mai complexe -->
    <div class="absolute top-20 left-10 w-72 h-72 bg-purple-600/30 rounded-full blur-[100px] animate-pulse"></div>
    <div class="absolute bottom-20 right-10 w-96 h-96 bg-blue-600/30 rounded-full blur-[120px] animate-pulse delay-700"></div>
    <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[600px] h-[600px] bg-cyan-600/20 rounded-full blur-[150px] animate-pulse delay-1000"></div>
    
    <!-- Animated Grid -->
    <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width="60" height="60" xmlns="http://www.w3.org/2000/svg"%3E%3Cdefs%3E%3Cpattern id="grid" width="60" height="60" patternUnits="userSpaceOnUse"%3E%3Cpath d="M 60 0 L 0 0 0 60" fill="none" stroke="rgba(255,255,255,0.03)" stroke-width="1"/%3E%3C/pattern%3E%3C/defs%3E%3Crect width="100%25" height="100%25" fill="url(%23grid)"/%3E%3C/svg%3E')] opacity-50"></div>
    
    <!-- Particles -->
    <div class="particles absolute inset-0"></div>
    
    <!-- Floating Elements -->
    <div class="absolute top-1/4 left-1/4 w-2 h-2 bg-purple-400 rounded-full animate-ping"></div>
    <div class="absolute top-3/4 right-1/3 w-3 h-3 bg-blue-400 rounded-full animate-ping delay-500"></div>
    <div class="absolute bottom-1/4 left-1/3 w-2 h-2 bg-cyan-400 rounded-full animate-ping delay-1000"></div>
  </div>
  
  <div class="container relative z-10">
    <div class="max-w-5xl mx-auto">
      <!-- Avatar Section cu efecte îmbunătățite -->
      <div class="flex justify-center mb-10">
        <div class="relative group">
          <!-- Multiple Rotating Borders -->
          <div class="absolute -inset-4 bg-gradient-to-r from-purple-600 via-blue-600 to-cyan-600 rounded-full opacity-75 blur-lg group-hover:opacity-100 animate-spin-slow"></div>
          <div class="absolute -inset-6 bg-gradient-to-r from-cyan-600 via-purple-600 to-blue-600 rounded-full opacity-50 blur-xl animate-spin-reverse"></div>
          
          <!-- Avatar Container -->
          <div class="relative w-40 h-40 md:w-48 md:h-48">
            <div class="absolute inset-0 bg-gradient-to-r from-purple-600 via-blue-600 to-cyan-600 rounded-full animate-spin-slow"></div>
            <div class="absolute inset-1 bg-black rounded-full"></div>
            <img src="{{ asset('img/avatar.jpg') }}" alt="avatar" class="absolute inset-2 w-full h-full object-cover rounded-full border-2 border-black transform group-hover:scale-105 transition-transform duration-500">
            
            <!-- Status Badge cu glow effect -->
            <div class="absolute bottom-2 right-2 flex items-center space-x-1 bg-black/80 backdrop-blur-sm px-3 py-1 rounded-full border border-green-500/50 shadow-[0_0_20px_rgba(34,197,94,0.5)]">
              <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse shadow-[0_0_10px_rgba(34,197,94,0.8)]"></div>
              <span class="text-xs text-green-400 font-medium">Available</span>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Hero Content cu animații îmbunătățite -->
      <div class="text-center space-y-8">
        <!-- Animated Text -->
        <div class="space-y-4">
          <h1 class="text-4xl md:text-6xl lg:text-7xl font-bold">
            <span class="block text-gray-400 animate-fade-in-down">{{ __('pages.hero_hi') }}</span>
            <span class="block mt-2 relative">
              <span class="bg-gradient-to-r from-purple-400 via-blue-400 to-cyan-400 bg-clip-text text-transparent animate-gradient-x animate-fade-in-up delay-200 bg-[length:200%_auto]">
                [Your Name]
              </span>
              <!-- Typing Cursor -->
              <span class="absolute -right-8 top-1/2 -translate-y-1/2 w-1 h-12 bg-cyan-400 animate-blink shadow-[0_0_10px_rgba(34,211,238,0.8)]"></span>
            </span>
          </h1>
          
          <!-- Dynamic Role Text cu tranziții mai smooth -->
          <div class="h-8 md:h-10 relative overflow-hidden">
            <div class="animate-text-slide">
              <p class="text-xl md:text-2xl text-gray-300 h-8 md:h-10 flex items-center justify-center">Full Stack Developer</p>
              <p class="text-xl md:text-2xl text-gray-300 h-8 md:h-10 flex items-center justify-center">Laravel Expert</p>
              <p class="text-xl md:text-2xl text-gray-300 h-8 md:h-10 flex items-center justify-center">UI/UX Enthusiast</p>
              <p class="text-xl md:text-2xl text-gray-300 h-8 md:h-10 flex items-center justify-center">Problem Solver</p>
            </div>
          </div>
        </div>
        
        <!-- Bio Text cu subtle glow -->
        <p class="text-lg md:text-xl text-gray-400 max-w-3xl mx-auto leading-relaxed animate-fade-in delay-400">
          {{ __('pages.hero_subtitle') }}
        </p>
        
        <!-- CTA Buttons cu hover effects îmbunătățite -->
        <div class="flex flex-wrap justify-center gap-4 md:gap-6 animate-fade-in-up delay-600">
          <!-- Primary CTA -->
          <a href="{{ route('projects', app()->getLocale()) }}" class="group relative">
            <div class="absolute -inset-1 bg-gradient-to-r from-purple-600 to-blue-600 rounded-full opacity-70 blur group-hover:opacity-100 transition duration-300"></div>
            <button class="relative px-8 py-4 bg-black rounded-full text-white font-medium flex items-center space-x-3 group-hover:scale-105 transition-all duration-300 shadow-2xl">
              <span>{{ __('pages.see_work') }}</span>
              <i class="fas fa-arrow-right group-hover:translate-x-1 transition-transform duration-300"></i>
            </button>
          </a>
          
          <!-- Secondary CTA -->
          <a href="{{ route('contact', app()->getLocale()) }}" class="group px-8 py-4 rounded-full border-2 border-gray-700 text-gray-300 font-medium flex items-center space-x-3 hover:border-gray-500 hover:text-white hover:bg-white/5 transition-all duration-300 hover:shadow-[0_0_30px_rgba(255,255,255,0.1)]">
            <i class="far fa-envelope"></i>
            <span>{{ __('pages.hire_me') }}</span>
          </a>
        </div>
        
        <!-- Social Links cu hover 3D -->
        <div class="flex justify-center space-x-6 animate-fade-in delay-800">
          @foreach([
            ['github', 'fab fa-github', '#333'],
            ['linkedin', 'fab fa-linkedin', '#0077B5'],
            ['twitter', 'fab fa-twitter', '#1DA1F2'],
            ['instagram', 'fab fa-instagram', '#E4405F']
          ] as $social)
          <a href="#" class="group relative transform hover:-translate-y-2 transition-all duration-300">
            <div class="absolute -inset-2 bg-gradient-to-r from-purple-600 to-blue-600 rounded-lg opacity-0 blur group-hover:opacity-60 transition duration-300"></div>
            <div class="relative w-12 h-12 bg-white/5 backdrop-blur-sm border border-white/10 rounded-lg flex items-center justify-center group-hover:bg-white/10 group-hover:border-white/20 transition-all duration-300 group-hover:shadow-[0_10px_40px_rgba(0,0,0,0.3)]">
              <i class="{{ $social[1] }} text-gray-400 group-hover:text-white transition-colors duration-300"></i>
            </div>
          </a>
          @endforeach
        </div>
      </div>
      
      <!-- Scroll Indicator cu animație îmbunătățită -->
      <div class="absolute bottom-10 left-1/2 -translate-x-1/2 animate-bounce">
        <a href="#about" class="flex flex-col items-center text-gray-500 hover:text-white transition-colors duration-300 group">
          <span class="text-xs uppercase tracking-wider mb-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300">Scroll</span>
          <div class="w-6 h-10 border-2 border-gray-600 rounded-full p-1 group-hover:border-white transition-colors duration-300 group-hover:shadow-[0_0_20px_rgba(255,255,255,0.3)]">
            <div class="w-1 h-2 bg-gray-600 rounded-full mx-auto animate-scroll group-hover:bg-white transition-colors duration-300"></div>
          </div>
        </a>
      </div>
    </div>
  </div>
</section>

<!-- About Section cu design premium îmbunătățit -->
<section id="about" class="py-32 relative bg-black overflow-hidden">
  <!-- Background Elements cu pattern -->
  <div class="absolute inset-0">
    <div class="absolute top-0 left-1/4 w-96 h-96 bg-purple-600/10 rounded-full blur-[100px] animate-float-slow"></div>
    <div class="absolute bottom-0 right-1/4 w-96 h-96 bg-blue-600/10 rounded-full blur-[100px] animate-float-slow delay-1000"></div>
    <!-- Mesh gradient -->
    <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-purple-900/10 via-transparent to-transparent"></div>
  </div>
  
  <div class="container relative z-10">
    <div class="grid lg:grid-cols-2 gap-16 lg:gap-24 items-center">
      <!-- Image Side cu efecte 3D -->
      <div class="relative order-2 lg:order-1">
        <!-- Main Image Container -->
        <div class="relative group perspective-1000">
          <!-- Decorative Elements -->
          <div class="absolute -top-6 -left-6 w-24 h-24 bg-gradient-to-br from-purple-600 to-blue-600 rounded-3xl opacity-20 blur-xl animate-pulse"></div>
          <div class="absolute -bottom-6 -right-6 w-32 h-32 bg-gradient-to-br from-blue-600 to-cyan-600 rounded-3xl opacity-20 blur-xl animate-pulse delay-500"></div>
          
          <!-- Image Frame cu 3D tilt -->
          <div class="relative rounded-3xl overflow-hidden transform-gpu transition-all duration-700 group-hover:rotate-y-12">
            <div class="absolute inset-0 bg-gradient-to-br from-purple-600/20 via-transparent to-blue-600/20 z-10"></div>
            <img src="{{ asset('img/avatar.jpg') }}" alt="About" class="w-full h-auto object-cover transform group-hover:scale-110 transition-transform duration-700">
          </div>
          
          <!-- Floating Cards cu glassmorphism -->
          <div class="absolute -bottom-8 -right-8 bg-black/60 backdrop-blur-2xl border border-white/10 rounded-2xl p-6 shadow-2xl transform hover:scale-105 transition-all duration-300">
            <div class="flex items-center space-x-4">
              <div class="w-12 h-12 bg-gradient-to-br from-green-500 to-emerald-500 rounded-xl flex items-center justify-center shadow-[0_0_30px_rgba(34,197,94,0.5)]">
                <i class="fas fa-code text-white"></i>
              </div>
              <div>
                <p class="text-2xl font-bold text-white">3+</p>
                <p class="text-sm text-gray-400">Years Experience</p>
              </div>
            </div>
          </div>
          
          <!-- Additional floating element -->
          <div class="absolute -top-4 -right-4 bg-gradient-to-br from-purple-500 to-pink-500 w-20 h-20 rounded-2xl flex items-center justify-center text-white font-bold text-xl shadow-2xl animate-float">
            <i class="fas fa-star"></i>
          </div>
        </div>
      </div>
      
      <!-- Content Side cu animații -->
      <div class="space-y-8 order-1 lg:order-2">
        <!-- Section Title cu gradient animat -->
        <div>
          <span class="text-purple-400 font-medium tracking-wider uppercase text-sm flex items-center gap-2">
            <span class="w-8 h-[2px] bg-purple-400"></span>
            Get to know me
          </span>
          <h2 class="text-4xl md:text-5xl lg:text-6xl font-bold mt-4">
            <span class="bg-gradient-to-r from-purple-400 via-blue-400 to-cyan-400 bg-clip-text text-transparent animate-gradient-x bg-[length:200%_auto]">
              {{ __('pages.about_h1') }}
            </span>
          </h2>
        </div>
        
               <!-- Description cu highlight pe hover -->
        <div class="space-y-4 text-gray-300 text-lg leading-relaxed">
          <p class="hover:text-gray-100 transition-colors duration-300">{{ __('pages.about_text') }}</p>
          <p class="hover:text-gray-100 transition-colors duration-300">I specialize in creating robust, scalable applications that not only meet technical requirements but also provide exceptional user experiences.</p>
        </div>
        
        <!-- Skills Grid cu hover 3D -->
        <div class="grid grid-cols-2 gap-4">
          @foreach([
            ['Frontend Development', 'fas fa-laptop-code', 'from-blue-500 to-cyan-500'],
            ['Backend Development', 'fas fa-server', 'from-purple-500 to-pink-500'],
            ['Database Design', 'fas fa-database', 'from-green-500 to-emerald-500'],
            ['API Development', 'fas fa-plug', 'from-orange-500 to-red-500']
          ] as $skill)
          <div class="group bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-4 hover:bg-white/10 hover:border-white/20 transition-all duration-300 hover:shadow-[0_8px_32px_rgba(0,0,0,0.3)] hover:-translate-y-1">
            <div class="flex items-center space-x-3">
              <div class="w-10 h-10 bg-gradient-to-br {{ $skill[2] }} rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300 shadow-lg">
                <i class="{{ $skill[1] }} text-white text-sm"></i>
              </div>
              <span class="text-gray-300 font-medium group-hover:text-white transition-colors duration-300">{{ $skill[0] }}</span>
            </div>
          </div>
          @endforeach
        </div>
        
        <!-- CTA cu efecte premium -->
        <div class="flex items-center space-x-6 pt-4">
          <a href="{{ route('contact', app()->getLocale()) }}" class="group relative inline-flex items-center space-x-2">
            <div class="absolute -inset-2 bg-gradient-to-r from-purple-600 to-blue-600 rounded-full opacity-0 blur group-hover:opacity-60 transition duration-300"></div>
            <span class="relative px-8 py-3 bg-gradient-to-r from-purple-600 to-blue-600 rounded-full text-white font-medium group-hover:scale-105 transition-transform duration-300 shadow-[0_4px_20px_rgba(147,51,234,0.5)]">
              Let's Work Together
            </span>
          </a>
          
          <a href="#" class="text-gray-400 hover:text-white transition-colors duration-300 flex items-center space-x-2 group">
            <span>Download CV</span>
            <i class="fas fa-download group-hover:translate-y-1 transition-transform duration-300"></i>
          </a>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Tech Stack cu efecte vizuale îmbunătățite -->
<section id="stack" class="py-32 bg-gradient-to-b from-black via-gray-900/50 to-black overflow-hidden relative">
  <!-- Background magic îmbunătățit -->
  <div class="absolute inset-0">
    <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg%20width%3D%22100%22%20height%3D%22100%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cdefs%3E%3Cpattern%20id%3D%22tech-grid%22%20width%3D%22100%22%20height%3D%22100%22%20patternUnits%3D%22userSpaceOnUse%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%221%22%20fill%3D%22rgba%28255%2C255%2C255%2C0.1%29%22/%3E%3C/pattern%3E%3C/defs%3E%3Crect%20width%3D%22100%25%22%20height%3D%22100%25%22%20fill%3D%22url%28%23tech-grid%29%22/%3E%3C/svg%3E')]"></div>
    <!-- Animated floating icons -->
    <div class="floating-icon top-20 left-10 text-purple-400/20 text-6xl animate-float-slow"><i class="fab fa-python"></i></div>
    <div class="floating-icon top-40 right-20 text-blue-400/20 text-5xl animate-float-slow delay-1000"><i class="fas fa-robot"></i></div>
    <div class="floating-icon bottom-20 left-1/4 text-green-400/20 text-7xl animate-float-slow delay-500"><i class="fas fa-search"></i></div>
    <div class="floating-icon bottom-40 right-1/3 text-yellow-400/20 text-6xl animate-float-slow delay-1500"><i class="fas fa-cloud"></i></div>
    <!-- Glowing lines -->
    <div class="absolute top-0 left-1/2 w-px h-full bg-gradient-to-b from-transparent via-purple-500/20 to-transparent"></div>
    <div class="absolute top-1/2 left-0 w-full h-px bg-gradient-to-r from-transparent via-blue-500/20 to-transparent"></div>
  </div>
  <div class="container relative z-10">
    <!-- Heading cu efecte -->
    <div class="text-center mb-20">
      <span class="text-purple-400 tracking-wider uppercase text-sm inline-flex items-center gap-2">
        <span class="w-8 h-[2px] bg-purple-400"></span>
        My Arsenal
        <span class="w-8 h-[2px] bg-purple-400"></span>
      </span>
      <h2 class="text-4xl md:text-5xl lg:text-6xl font-bold mt-4 mb-6">
        <span class="bg-gradient-to-r from-purple-400 via-blue-400 to-cyan-400 bg-clip-text text-transparent animate-gradient-x bg-[length:200%_auto]">
          {{ __('pages.stack_h1') }}
        </span>
      </h2>
      <p class="text-xl text-gray-400 max-w-3xl mx-auto">
        From pixel-perfect front-ends to hyper-automated back-ends, SEO & growth stacks
      </p>
    </div>
    <!-- Grid cu hover effects 3D -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-20"> <!-- Ajustat pentru 6 carduri -->
      <!-- 1. Frontend Technologies -->
      <div class="group relative transform hover:-translate-y-2 transition-all duration-500">
        <div class="absolute inset-0 bg-gradient-to-r from-blue-600/20 to-cyan-600/20 rounded-3xl blur-xl opacity-0 group-hover:opacity-100 group-hover:shadow-[0_0_25px_rgba(6,182,212,0.3)] transition-all duration-500"></div>
        <div class="relative bg-white/5 backdrop-blur-xl border border-white/10 rounded-3xl p-8 hover:bg-white/10 hover:border-white/20 transition-all duration-300 hover:shadow-[0_20px_60px_rgba(0,0,0,0.5)]">
          <div class="w-16 h-16 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300 shadow-[0_8px_30px_rgba(0,0,0,0.3)]">
            <i class="fas fa-code text-2xl text-white"></i>
          </div>
          <h3 class="text-2xl font-bold text-white mb-4">Frontend</h3>
          <ul class="space-y-3 text-sm text-gray-300">
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-html5 text-orange-400"></i>
              <span>HTML5 & CSS3</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-js text-yellow-400"></i>
              <span>JavaScript ES6+</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-vuejs text-green-400"></i>
              <span>Vue.js 3</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-wind text-cyan-400"></i>
              <span>Tailwind CSS</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-bootstrap text-purple-400"></i>
              <span>Bootstrap 5</span>
            </li>
          </ul>
        </div>
      </div>
      <!-- 2. Backend Technologies -->
      <div class="group relative transform hover:-translate-y-2 transition-all duration-500">
        <div class="absolute inset-0 bg-gradient-to-r from-purple-600/20 to-pink-600/20 rounded-3xl blur-xl opacity-0 group-hover:opacity-100 group-hover:shadow-[0_0_25px_rgba(219,39,119,0.3)] transition-all duration-500"></div>
        <div class="relative bg-white/5 backdrop-blur-xl border border-white/10 rounded-3xl p-8 hover:bg-white/10 hover:border-white/20 transition-all duration-300 hover:shadow-[0_20px_60px_rgba(0,0,0,0.5)]">
          <div class="w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-500 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300 shadow-[0_8px_30px_rgba(0,0,0,0.3)]">
            <i class="fas fa-server text-2xl text-white"></i>
          </div>
          <h3 class="text-2xl font-bold text-white mb-4">Backend</h3>
          <ul class="space-y-3 text-sm text-gray-300">
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-php text-purple-400"></i>
              <span>PHP 8+</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-laravel text-red-400"></i>
              <span>Laravel 10</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-node-js text-green-400"></i>
              <span>Node.js</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-plug text-blue-400"></i>
              <span>REST APIs</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-project-diagram text-pink-400"></i>
              <span>GraphQL</span>
            </li>
          </ul>
        </div>
      </div>
      <!-- 3. Database & DevOps -->
      <div class="group relative transform hover:-translate-y-2 transition-all duration-500">
        <div class="absolute inset-0 bg-gradient-to-r from-green-600/20 to-emerald-600/20 rounded-3xl blur-xl opacity-0 group-hover:opacity-100 group-hover:shadow-[0_0_25px_rgba(16,185,129,0.3)] transition-all duration-500"></div>
        <div class="relative bg-white/5 backdrop-blur-xl border border-white/10 rounded-3xl p-8 hover:bg-white/10 hover:border-white/20 transition-all duration-300 hover:shadow-[0_20px_60px_rgba(0,0,0,0.5)]">
          <div class="w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-500 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300 shadow-[0_8px_30px_rgba(0,0,0,0.3)]">
            <i class="fas fa-database text-2xl text-white"></i>
          </div>
          <h3 class="text-2xl font-bold text-white mb-4">Database & DevOps</h3>
          <ul class="space-y-3 text-sm text-gray-300">
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-database text-blue-400"></i>
              <span>MySQL</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-database text-blue-300"></i>
              <span>PostgreSQL</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-memory text-red-400"></i>
              <span>Redis</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-docker text-blue-400"></i>
              <span>Docker</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-git-alt text-orange-400"></i>
              <span>Git & GitHub</span>
            </li>
          </ul>
        </div>
      </div>
      <!-- 4. Python & RPA -->
      <div class="group relative transform hover:-translate-y-2 transition-all duration-500">
        <div class="absolute inset-0 bg-gradient-to-r from-yellow-600/20 to-amber-600/20 rounded-3xl blur-xl opacity-0 group-hover:opacity-100 group-hover:shadow-[0_0_25px_rgba(245,158,11,0.3)] transition-all duration-500"></div>
        <div class="relative bg-white/5 backdrop-blur-xl border border-white/10 rounded-3xl p-8 hover:bg-white/10 hover:border-white/20 transition-all duration-300 hover:shadow-[0_20px_60px_rgba(0,0,0,0.5)]">
          <div class="w-16 h-16 bg-gradient-to-br from-yellow-500 to-amber-500 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300 shadow-[0_8px_30px_rgba(0,0,0,0.3)]">
            <i class="fab fa-python text-2xl text-white"></i>
          </div>
          <h3 class="text-2xl font-bold text-white mb-4">Python & RPA</h3>
          <ul class="space-y-3 text-sm text-gray-300">
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-python text-yellow-400"></i>
              <span>Scrapy / Selenium</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-robot text-cyan-400"></i>
              <span>PyAutoGUI / RPA</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-chart-bar text-green-400"></i>
              <span>Pandas / NumPy</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-microchip text-red-400"></i>
              <span>FastAPI / Django REST</span>
            </li>
          </ul>
        </div>
      </div>
      <!-- 5. No-Code Orchestration -->
      <div class="group relative transform hover:-translate-y-2 transition-all duration-500">
        <div class="absolute inset-0 bg-gradient-to-r from-pink-600/20 to-rose-600/20 rounded-3xl blur-xl opacity-0 group-hover:opacity-100 group-hover:shadow-[0_0_25px_rgba(244,114,182,0.3)] transition-all duration-500"></div>
        <div class="relative bg-white/5 backdrop-blur-xl border border-white/10 rounded-3xl p-8 hover:bg-white/10 hover:border-white/20 transition-all duration-300 hover:shadow-[0_20px_60px_rgba(0,0,0,0.5)]">
          <div class="w-16 h-16 bg-gradient-to-br from-pink-500 to-rose-500 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300 shadow-[0_8px_30px_rgba(0,0,0,0.3)]">
            <i class="fas fa-project-diagram text-2xl text-white"></i>
          </div>
          <h3 class="text-2xl font-bold text-white mb-4">No-Code Orchestration</h3>
          <ul class="space-y-3 text-sm text-gray-300">
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-cogs text-purple-400"></i>
              <span>n8n / Make.com</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-bolt text-yellow-400"></i>
              <span>Zapier / Integrately</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-cloud text-blue-400"></i>
              <span>OctaBase / n8n-Cloud</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-link text-green-400"></i>
              <span>Webhook bridges</span>
            </li>
          </ul>
        </div>
      </div>
      <!-- 6. SEO & Growth -->
      <div class="group relative transform hover:-translate-y-2 transition-all duration-500">
        <div class="absolute inset-0 bg-gradient-to-r from-orange-600/20 to-red-600/20 rounded-3xl blur-xl opacity-0 group-hover:opacity-100 group-hover:shadow-[0_0_25px_rgba(239,68,68,0.3)] transition-all duration-500"></div>
        <div class="relative bg-white/5 backdrop-blur-xl border border-white/10 rounded-3xl p-8 hover:bg-white/10 hover:border-white/20 transition-all duration-300 hover:shadow-[0_20px_60px_rgba(0,0,0,0.5)]">
          <div class="w-16 h-16 bg-gradient-to-br from-orange-500 to-red-500 rounded-2xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300 shadow-[0_8px_30px_rgba(0,0,0,0.3)]">
            <i class="fas fa-search text-2xl text-white"></i>
          </div>
          <h3 class="text-2xl font-bold text-white mb-4">SEO & Growth</h3>
          <ul class="space-y-3 text-sm text-gray-300">
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-chart-line text-green-400"></i>
              <span>Technical SEO</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fab fa-google text-blue-400"></i>
              <span>Search Console / GA4</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-tachometer-alt text-purple-400"></i>
              <span>PageSpeed & Lighthouse</span>
            </li>
            <li class="flex items-center space-x-2 hover:text-white transition-colors duration-300">
              <i class="fas fa-share-alt text-cyan-400"></i>
              <span>Schema & SERP automation</span>
            </li>
          </ul>
        </div>
      </div>
    </div>
    <!-- Progress Bars cu animații -->
    <div class="max-w-4xl mx-auto">
      <h3 class="text-2xl font-bold text-center text-white mb-12">Proficiency Levels</h3>
      <div class="space-y-6">
        @foreach([
          ['Laravel Development', 95, 'from-red-500 to-pink-500'],
          ['Frontend Development', 90, 'from-blue-500 to-cyan-500'],
          ['Database Design', 85, 'from-green-500 to-emerald-500'],
          ['API Development', 92, 'from-purple-500 to-indigo-500'],
          ['DevOps', 80, 'from-orange-500 to-yellow-500'],
          ['Python Automation', 88, 'from-yellow-500 to-green-500'],
          ['SEO & Growth', 85, 'from-pink-500 to-purple-500']
        ] as $skill)
        <div class="group">
          <div class="flex justify-between items-center mb-2">
            <span class="text-gray-300 font-medium group-hover:text-white transition-colors duration-300">{{ $skill[0] }}</span>
            <span class="text-gray-400 text-sm">{{ $skill[1] }}%</span>
          </div>
          <div class="h-3 bg-white/10 rounded-full overflow-hidden backdrop-blur-sm">
            <div class="h-full bg-gradient-to-r {{ $skill[2] }} rounded-full relative overflow-hidden transition-all duration-1000 ease-out" style="width: 0%" data-width="{{ $skill[1] }}%">
              <div class="absolute inset-0 bg-white/20 animate-shimmer"></div>
            </div>
          </div>
        </div>
        @endforeach
      </div>
    </div>
  </div>
</section>
   
      </div>
    </div>
  </div>
</section>

<!-- CSS Animations -->
<style>
@keyframes float-slow {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

@keyframes spin-slow {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes spin-reverse {
  from { transform: rotate(360deg); }
  to { transform: rotate(0deg); }
}

@keyframes gradient-x {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes blink {
  0%, 50%, 100% { opacity: 1; }
  25%, 75% { opacity: 0; }
}

@keyframes text-slide {
  0%, 25% { transform: translateY(0); }
  25%, 50% { transform: translateY(-100%); }
  50%, 75% { transform: translateY(-200%); }
  75%, 100% { transform: translateY(-300%); }
}

@keyframes scroll {
  0% { transform: translateY(0); opacity: 0; }
  50% { opacity: 1; }
  100% { transform: translateY(8px); opacity: 0; }
}

@keyframes fade-in-down {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes float {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  33% { transform: translateY(-10px) rotate(-5deg); }
  66% { transform: translateY(5px) rotate(5deg); }
}

.animate-float-slow {
  animation: float-slow 6s ease-in-out infinite;
}

.animate-spin-slow {
  animation: spin-slow 20s linear infinite;
}

.animate-spin-reverse {
  animation: spin-reverse 25s linear infinite;
}

.animate-gradient-x {
  animation: gradient-x 3s ease infinite;
}

.animate-shimmer {
  animation: shimmer 2s infinite;
}

.animate-blink {
  animation: blink 1s infinite;
}

.animate-text-slide {
  animation: text-slide 8s ease-in-out infinite;
}

.animate-scroll {
  animation: scroll 2s ease-in-out infinite;
}

.animate-fade-in-down {
  animation: fade-in-down 0.8s ease-out;
}

.animate-fade-in-up {
  animation: fade-in-up 0.8s ease-out;
}

.animate-fade-in {
  animation: fade-in 0.8s ease-out;
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

/* Delay classes */
.delay-200 { animation-delay: 200ms; }
.delay-400 { animation-delay: 400ms; }
.delay-500 { animation-delay: 500ms; }
.delay-600 { animation-delay: 600ms; }
.delay-700 { animation-delay: 700ms; }
.delay-800 { animation-delay: 800ms; }
.delay-1000 { animation-delay: 1000ms; }
.delay-1500 { animation-delay: 1500ms; }

/* 3D perspective */
.perspective-1000 {
  perspective: 1000px;
}

.rotate-y-12 {
  transform: rotateY(12deg);
}

/* Floating icons */
.floating-icon {
  position: absolute;
  opacity: 0.1;
  animation: float-slow 8s ease-in-out infinite;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #000;
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(to bottom, #8b5cf6, #3b82f6);
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(to bottom, #a78bfa, #60a5fa);
}
</style>

<!-- Enhanced JavaScript -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Smooth reveal animations on scroll
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -100px 0px'
  };
  
  const observer = new IntersectionObserver(function(entries) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-fade-in-up');
        
        // Animate progress bars when in view
        if (entry.target.id === 'stack') {
          animateProgressBars();
        }
        
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);
  
  // Observe all sections
  document.querySelectorAll('section').forEach(section => {
    observer.observe(section);
  });
  
  // Animate progress bars
  function animateProgressBars() {
    const progressBars = document.querySelectorAll('[data-width]');
    progressBars.forEach((bar, index) => {
      setTimeout(() => {
        bar.style.width = bar.getAttribute('data-width');
      }, index * 100);
    });
  }
  
  // Parallax effect on mouse move
  document.addEventListener('mousemove', (e) => {
    const mouseX = e.clientX / window.innerWidth;
    const mouseY = e.clientY / window.innerHeight;
    
    document.querySelectorAll('.floating-icon').forEach((icon, index) => {
      const speed = (index + 1) * 0.5;
      const x = (mouseX - 0.5) * speed * 50;
      const y = (mouseY - 0.5) * speed * 50;
      
      icon.style.transform = `translate(${x}px, ${y}px)`;
    });
  });
  
  // Smooth scroll for anchor links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });
  
  // Add particle effect
  function createParticle() {
    const particle = document.createElement('div');
    particle.className = 'particle';
    particle.style.cssText = `
      position: absolute;
      width: 2px;
      height: 2px;
      background: rgba(255, 255, 255, 0.5);
      pointer-events: none;
      border-radius: 50%;
      left: ${Math.random() * 100}%;
      top: ${Math.random() * 100}%;
      animation: particle-float ${5 + Math.random() * 10}s linear infinite;
    `;
    
    const particlesContainer = document.querySelector('.particles');
    if (particlesContainer) {
      particlesContainer.appendChild(particle);
      
      setTimeout(() => {
        particle.remove();
      }, 15000);
    }
  }
  
  // Create particles periodically
  setInterval(createParticle, 300);
  
  // Add hover tilt effect to cards
  const cards = document.querySelectorAll('.group');
  cards.forEach(card => {
    card.addEventListener('mousemove', (e) => {
      const rect = card.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      
      const centerX = rect.width / 2;
      const centerY = rect.height / 2;
      
      const rotateX = (y - centerY) / 10;
      const rotateY = (centerX - x) / 10;
      
      card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateZ(10px)`;
    });
    
    card.addEventListener('mouseleave', () => {
      card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) translateZ(0)';
    });
  });
});

// Add particle float animation
const style = document.createElement('style');
style.textContent = `
  @keyframes particle-float {
    0% {
      transform: translateY(100vh) rotate(0deg);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translateY(-100vh) rotate(360deg);
      opacity: 0;
    }
  }
`;
document.head.appendChild(style);
</script>
@endsection
partials: footer <!-- resources/views/partials/footer.blade.php -->
<footer class="relative bg-black border-t border-white/10 overflow-hidden">
  <!-- Background ornaments -->
  <div class="absolute inset-0 pointer-events-none">
    <!-- Floating gradient orbs -->
    <div class="absolute top-0 left-1/4 w-80 h-80 bg-purple-600/20 rounded-full blur-[120px] animate-float-slow"></div>
    <div class="absolute bottom-0 right-1/4 w-64 h-64 bg-blue-600/20 rounded-full blur-[100px] animate-float-slow delay-1000"></div>
    <!-- Grid overlay -->
    <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width="60" height="60" xmlns="http://www.w3.org/2000/svg"%3E%3Cdefs%3E%3Cpattern id="footer-grid" width="60" height="60" patternUnits="userSpaceOnUse"%3E%3Cpath d="M 60 0 L 0 0 0 60" fill="none" stroke="rgba(255,255,255,0.03)" stroke-width="1"/%3E%3C/pattern%3E%3C/defs%3E%3Crect width="100%25" height="100%25" fill="url(%23footer-grid)"/%3E%3C/svg%3E')] opacity-50"></div>
  </div>

  <div class="container relative z-10">
    <!-- Main footer grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-12 py-16">
      
      <!-- 1. Brand column -->
      <div class="flex flex-col space-y-6">
        <a href="{{ route('home', app()->getLocale()) }}" class="flex items-center space-x-3">
          <div class="w-12 h-12 rounded-2xl bg-gradient-to-br from-purple-600 via-blue-600 to-cyan-500 p-[2px]">
            <div class="w-full h-full rounded-2xl bg-black flex items-center justify-center">
              <span class="text-white font-bold text-xl bg-gradient-to-r from-purple-400 to-cyan-400 bg-clip-text text-transparent">N</span>
            </div>
          </div>
          <span class="text-2xl font-bold">
            <span class="bg-gradient-to-r from-purple-400 to-cyan-400 bg-clip-text text-transparent">Doctor It</span>
          </span>
        </a>
        <p class="text-gray-400 leading-relaxed max-w-xs">
          Crafting scalable, pixel-perfect web experiences with Laravel, Vue & automation superpowers.
        </p>
        <div class="flex space-x-4 pt-2">
          @foreach([
            ['github', 'fab fa-github', 'https://github.com/yourusername'],
            ['linkedin', 'fab fa-linkedin', 'https://linkedin.com/in/yourusername'],
            ['twitter', 'fab fa-twitter', 'https://twitter.com/yourusername'],
            ['instagram', 'fab fa-instagram', 'https://instagram.com/yourusername']
          ] as $social)
          <a href="{{ $social[2] }}" target="_blank" class="group relative">
            <div class="absolute -inset-2 bg-gradient-to-r from-purple-600 to-blue-600 rounded-lg opacity-0 blur group-hover:opacity-40 transition duration-300"></div>
            <div class="relative w-10 h-10 bg-white/5 backdrop-blur-sm border border-white/10 rounded-lg flex items-center justify-center group-hover:bg-white/10 group-hover:border-white/20 transition-all duration-300">
              <i class="{{ $social[1] }} text-gray-400 group-hover:text-white transition-colors duration-300"></i>
            </div>
          </a>
          @endforeach
        </div>
      </div>

      <!-- 2. Quick Links -->
      <div>
        <h4 class="text-white font-semibold mb-6 text-lg">Quick Links</h4>
        <ul class="space-y-3">
          <li>
            <a href="{{ route('home', app()->getLocale()) }}#about" 
               class="group flex items-center space-x-2 text-gray-400 hover:text-white transition-colors duration-300">
              <i class="fas fa-chevron-right text-xs opacity-0 group-hover:opacity-100 transition-opacity duration-300"></i>
              <span>{{ __('pages.about_h1') }}</span>
            </a>
          </li>
          <li>
            <a href="{{ route('projects', app()->getLocale()) }}" 
               class="group flex items-center space-x-2 text-gray-400 hover:text-white transition-colors duration-300">
              <i class="fas fa-chevron-right text-xs opacity-0 group-hover:opacity-100 transition-opacity duration-300"></i>
              <span>{{ __('pages.projects_h1') }}</span>
            </a>
          </li>
          <li>
            <a href="{{ route('contact', app()->getLocale()) }}" 
               class="group flex items-center space-x-2 text-gray-400 hover:text-white transition-colors duration-300">
              <i class="fas fa-chevron-right text-xs opacity-0 group-hover:opacity-100 transition-opacity duration-300"></i>
              <span>{{ __('pages.contact_h1') }}</span>
            </a>
          </li>
        </ul>
      </div>

      <!-- 3. Technologies -->
      <div>
        <h4 class="text-white font-semibold mb-6 text-lg">Technologies</h4>
        <ul class="space-y-3 text-gray-400">
          <li class="flex items-center space-x-2"><i class="fab fa-laravel text-red-500"></i><span>Laravel</span></li>
          <li class="flex items-center space-x-2"><i class="fab fa-vuejs text-green-500"></i><span>Vue.js</span></li>
          <li class="flex items-center space-x-2"><i class="fab fa-python text-yellow-500"></i><span>Python & RPA</span></li>
          <li class="flex items-center space-x-2"><i class="fas fa-robot text-cyan-500"></i><span>No-Code Automation</span></li>
          <li class="flex items-center space-x-2"><i class="fas fa-search text-orange-500"></i><span>SEO & Growth</span></li>
        </ul>
      </div>

      <!-- 4. Contact / CTA -->
      <div>
        <h4 class="text-white font-semibold mb-6 text-lg">Let's Connect</h4>
        <p class="text-gray-400 mb-4">Ready to start your next project? Drop a line and let's talk.</p>
        <a href="{{ route('contact', app()->getLocale()) }}" 
           class="group relative inline-flex items-center space-x-2 w-full justify-center mb-4">
          <div class="absolute -inset-1 bg-gradient-to-r from-purple-600 to-blue-600 rounded-xl opacity-70 blur group-hover:opacity-100 transition duration-300"></div>
          <button class="relative px-6 py-3 bg-black rounded-xl text-white font-medium w-full">
            <span class="flex items-center justify-center space-x-2">
              <i class="fas fa-envelope"></i>
              <span>Get in Touch</span>
            </span>
          </button>
        </a>
        <p class="text-sm text-gray-500 text-center">
          your.email@example.com
        </p>
      </div>
    </div>

    <!-- Divider -->
    <div class="border-t border-white/10"></div>

    <!-- Bottom bar -->
    <div class="flex flex-col md:flex-row justify-between items-center py-6 text-sm text-gray-500">
      <p>&copy; {{ date('Y') }} Doctor It. All rights reserved.</p>
      <p class="flex items-center space-x-2">
        <span>Made with</span>
        <i class="fas fa-heart text-red-500 animate-pulse"></i>
        <span>in Bucharest</span>
      </p>
    </div>
  </div>
</footer>

<!-- CSS Animations -->
<style>
@keyframes float-slow {
  0%, 100% { transform: translateY(0px) scale(1); }
  50% { transform: translateY(-20px) scale(1.05); }
}

.animate-float-slow {
  animation: float-slow 8s ease-in-out infinite;
}

.delay-1000 {
  animation-delay: 1s;
}
</style>
            head <meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<title>{{ $title ?? config('app.name') }}</title>

<link rel="icon" href="/favicon.ico" sizes="any">
<link rel="icon" href="/favicon.svg" type="image/svg+xml">
<link rel="apple-touch-icon" href="/apple-touch-icon.png">

<link rel="preconnect" href="https://fonts.bunny.net">
<link href="https://fonts.bunny.net/css?family=instrument-sans:400,500,600" rel="stylesheet" />

@vite(['resources/css/app.css', 'resources/js/app.js'])
@fluxAppearance

            navbar <nav class="fixed top-0 left-0 right-0 z-50 py-3 bg-black/80 backdrop-blur-xl border-b border-white/10 transition-all duration-500" id="navbar">
  <div class="container mx-auto px-4 flex justify-between items-center">
    <!-- Logo cu animație și gradient -->
    <a href="{{ route('home', app()->getLocale()) }}" class="group flex items-center space-x-3 relative">
      <!-- Glow effect behind logo -->
      <div class="absolute -inset-2 bg-gradient-to-r from-purple-600/20 to-blue-600/20 rounded-2xl blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
      
      <div class="relative w-12 h-12 rounded-2xl bg-gradient-to-br from-purple-600 via-blue-600 to-cyan-500 p-[2px] shadow-lg group-hover:shadow-purple-500/25 transition-all duration-300 group-hover:scale-110">
        <div class="w-full h-full rounded-2xl bg-black flex items-center justify-center">
          <span class="text-white font-bold text-xl bg-gradient-to-r from-purple-400 to-cyan-400 bg-clip-text text-transparent">N</span>
        </div>
      </div>
      
      <span class="relative text-2xl font-bold">
        <span class="bg-gradient-to-r from-purple-400 via-blue-400 to-cyan-400 bg-clip-text text-transparent group-hover:from-purple-300 group-hover:to-cyan-300 transition-all duration-300">
          Doctor It
        </span>
        <!-- Underline animation -->
        <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-purple-400 to-cyan-400 group-hover:w-full transition-all duration-300"></span>
      </span>
    </a>
    
    <!-- Desktop Navigation -->
    <div class="hidden md:flex items-center space-x-2 lg:space-x-6">
      <!-- Nav Links with modern hover effects -->
      <a href="#about" class="nav-link group relative px-4 py-2 overflow-hidden rounded-xl transition-all duration-300">
        <span class="relative z-10 text-gray-300 group-hover:text-white transition-colors duration-300 font-medium">
          {{ __('pages.about_h1') }}
        </span>
        <!-- Gradient hover background -->
        <div class="absolute inset-0 bg-gradient-to-r from-purple-600/10 to-blue-600/10 translate-y-full group-hover:translate-y-0 transition-transform duration-300"></div>
        <!-- Bottom line indicator -->
        <div class="absolute bottom-0 left-1/2 -translate-x-1/2 w-0 h-0.5 bg-gradient-to-r from-purple-400 to-blue-400 group-hover:w-3/4 transition-all duration-300"></div>
      </a>
      
      <a href="{{ route('projects', app()->getLocale()) }}" class="nav-link group relative px-4 py-2 overflow-hidden rounded-xl transition-all duration-300">
        <span class="relative z-10 text-gray-300 group-hover:text-white transition-colors duration-300 font-medium">
          {{ __('pages.projects_h1') }}
        </span>
        <div class="absolute inset-0 bg-gradient-to-r from-purple-600/10 to-blue-600/10 translate-y-full group-hover:translate-y-0 transition-transform duration-300"></div>
        <div class="absolute bottom-0 left-1/2 -translate-x-1/2 w-0 h-0.5 bg-gradient-to-r from-purple-400 to-blue-400 group-hover:w-3/4 transition-all duration-300"></div>
      </a>
      
      <!-- Aici adăugăm linkul către blog -->
      <a href="{{ route('blog.index') }}" class="nav-link group relative px-4 py-2 overflow-hidden rounded-xl transition-all duration-300">
        <span class="relative z-10 text-gray-300 group-hover:text-white transition-colors duration-300 font-medium">
          Blog
        </span>
        <div class="absolute inset-0 bg-gradient-to-r from-purple-600/10 to-blue-600/10 translate-y-full group-hover:translate-y-0 transition-transform duration-300"></div>
        <div class="absolute bottom-0 left-1/2 -translate-x-1/2 w-0 h-0.5 bg-gradient-to-r from-purple-400 to-blue-400 group-hover:w-3/4 transition-all duration-300"></div>
      </a>
      
      <a href="{{ route('contact', app()->getLocale()) }}" class="nav-link group relative px-4 py-2 overflow-hidden rounded-xl transition-all duration-300">
        <span class="relative z-10 text-gray-300 group-hover:text-white transition-colors duration-300 font-medium">
          {{ __('pages.contact_h1') }}
        </span>
        <div class="absolute inset-0 bg-gradient-to-r from-purple-600/10 to-blue-600/10 translate-y-full group-hover:translate-y-0 transition-transform duration-300"></div>
        <div class="absolute bottom-0 left-1/2 -translate-x-1/2 w-0 h-0.5 bg-gradient-to-r from-purple-400 to-blue-400 group-hover:w-3/4 transition-all duration-300"></div>
      </a>
      
      <!-- Separator -->
      <div class="w-px h-6 bg-gradient-to-b from-transparent via-gray-600 to-transparent"></div>
      
      <!-- Language Selector cu design modern -->
      <div class="relative group">
        <button class="flex items-center space-x-2 px-4 py-2 rounded-xl bg-white/5 border border-white/10 text-gray-300 hover:text-white hover:bg-white/10 hover:border-white/20 transition-all duration-300 group">
          <i class="fas fa-globe text-sm"></i>
          <span class="font-medium">{{ strtoupper(app()->getLocale()) }}</span>
          <i class="fas fa-chevron-down text-xs transition-transform duration-300 group-hover:rotate-180"></i>
        </button>
        
        <!-- Dropdown cu animație smooth -->
        <div class="absolute top-full right-0 mt-2 w-32 bg-black/90 backdrop-blur-xl rounded-xl shadow-2xl shadow-black/50 border border-white/10 py-1 opacity-0 invisible scale-95 transform origin-top-right transition-all duration-300 group-hover:opacity-100 group-hover:visible group-hover:scale-100">
          <a href="{{ route('home', 'en') }}" class="flex items-center space-x-3 px-4 py-2.5 hover:bg-white/10 transition-all duration-200 {{ app()->getLocale() === 'en' ? 'text-white bg-white/5' : 'text-gray-400' }}">
            <span class="text-lg">🇬🇧</span>
            <span class="font-medium">English</span>
          </a>
          <a href="{{ route('home', 'ro') }}" class="flex items-center space-x-3 px-4 py-2.5 hover:bg-white/10 transition-all duration-200 {{ app()->getLocale() === 'ro' ? 'text-white bg-white/5' : 'text-gray-400' }}">
            <span class="text-lg">🇷🇴</span>
            <span class="font-medium">Română</span>
          </a>
        </div>
      </div>
      
      <!-- CTA Button (opțional) -->
      <a href="{{ route('contact', app()->getLocale()) }}" class="ml-4 px-6 py-2.5 rounded-xl bg-gradient-to-r from-purple-600 to-blue-600 text-white font-medium shadow-lg shadow-purple-500/25 hover:shadow-purple-500/40 hover:scale-105 transition-all duration-300">
        Hire Me
      </a>
    </div>
    
    <!-- Mobile Menu Button cu animație -->
    <button class="md:hidden relative w-10 h-10 rounded-xl bg-white/5 border border-white/10 text-gray-300 hover:text-white hover:bg-white/10 transition-all duration-300 group" id="mobile-menu-btn">
      <span class="sr-only">Toggle menu</span>
      <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-5 h-4 flex flex-col justify-between">
        <span class="block h-0.5 bg-current transform transition-all duration-300 origin-left" id="line1"></span>
        <span class="block h-0.5 bg-current transition-all duration-300" id="line2"></span>
        <span class="block h-0.5 bg-current transform transition-all duration-300 origin-left" id="line3"></span>
      </div>
    </button>
  </div>
  
  <!-- Mobile Menu cu design modern -->
  <div class="md:hidden absolute top-full left-0 right-0 bg-black/95 backdrop-blur-xl border-b border-white/10 opacity-0 invisible transform -translate-y-4 transition-all duration-300" id="mobile-menu">
    <div class="container mx-auto px-4 py-6 space-y-2">
      <a href="#about" class="mobile-link flex items-center space-x-3 py-3 px-4 rounded-xl text-gray-300 hover:text-white hover:bg-white/5 transition-all duration-300 group">
        <div class="w-1 h-6 bg-gradient-to-b from-purple-400 to-blue-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        <span class="font-medium">{{ __('pages.about_h1') }}</span>
      </a>
      
      <a href="{{ route('projects', app()->getLocale()) }}" class="mobile-link flex items-center space-x-3 py-3 px-4 rounded-xl text-gray-300 hover:text-white hover:bg-white/5 transition-all duration-300 group">
        <div class="w-1 h-6 bg-gradient-to-b from-purple-400 to-blue-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        <span class="font-medium">{{ __('pages.projects_h1') }}</span>
      </a>
      
      <!-- Aici adăugăm linkul către blog în meniul mobil -->
      <a href="{{ route('blog.index') }}" class="mobile-link flex items-center space-x-3 py-3 px-4 rounded-xl text-gray-300 hover:text-white hover:bg-white/5 transition-all duration-300 group">
        <div class="w-1 h-6 bg-gradient-to-b from-purple-400 to-blue-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        <span class="font-medium">Blog</span>
      </a>
      
      <a href="{{ route('contact', app()->getLocale()) }}" class="mobile-link flex items-center space-x-3 py-3 px-4 rounded-xl text-gray-300 hover:text-white hover:bg-white/5 transition-all duration-300 group">
        <div class="w-1 h-6 bg-gradient-to-b from-purple-400 to-blue-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        <span class="font-medium">{{ __('pages.contact_h1') }}</span>
      </a>
      
      <!-- Language selector pentru mobile -->
      <div class="pt-4 mt-4 border-t border-white/10">
        <p class="text-xs text-gray-500 uppercase tracking-wider mb-3 px-4">Language</p>
        <div class="grid grid-cols-2 gap-2">
          <a href="{{ route('home', 'en') }}" class="flex items-center justify-center space-x-2 py-3 rounded-xl bg-white/5 border {{ app()->getLocale() === 'en' ? 'border-purple-500/50 text-white bg-purple-500/10' : 'border-white/10 text-gray-400' }} transition-all duration-300">
            <span>🇬🇧</span>
            <span class="font-medium">EN</span>
          </a>
          <a href="{{ route('home', 'ro') }}" class="flex items-center justify-center space-x-2 py-3 rounded-xl bg-white/5 border {{ app()->getLocale() === 'ro' ? 'border-purple-500/50 text-white bg-purple-500/10' : 'border-white/10 text-gray-400' }} transition-all duration-300">
            <span>🇷🇴</span>
            <span class="font-medium">RO</span>
          </a>
        </div>
      </div>
      
      <!-- Mobile CTA -->
      <div class="pt-4">
        <a href="{{ route('contact', app()->getLocale()) }}" class="block w-full py-3 rounded-xl bg-gradient-to-r from-purple-600 to-blue-600 text-white text-center font-medium shadow-lg shadow-purple-500/25">
          Hire Me
        </a>
      </div>
    </div>
  </div>
</nav>

<!-- Script complet pentru funcționalitate -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuBtn = document.getElementById('mobile-menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    const navbar = document.getElementById('navbar');
    let isMenuOpen = false;
    
    // Mobile menu toggle cu animație hamburger
    mobileMenuBtn.addEventListener('click', function(e) {
        e.stopPropagation();
        isMenuOpen = !isMenuOpen;
        
        if (isMenuOpen) {
            mobileMenu.classList.remove('opacity-0', 'invisible', '-translate-y-4');
            mobileMenu.classList.add('opacity-100', 'visible', 'translate-y-0');
            
            // Animație hamburger to X
            document.getElementById('line1').classList.add('rotate-45', 'translate-y-[7px]', 'w-full');
            document.getElementById('line2').classList.add('opacity-0');
            document.getElementById('line3').classList.add('-rotate-45', '-translate-y-[7px]', 'w-full');
        } else {
            mobileMenu.classList.add('opacity-0', 'invisible', '-translate-y-4');
            mobileMenu.classList.remove('opacity-100', 'visible', 'translate-y-0');
            
            // Revert animation
            document.getElementById('line1').classList.remove('rotate-45', 'translate-y-[7px]', 'w-full');
            document.getElementById('line2').classList.remove('opacity-0');
            document.getElementById('line3').classList.remove('-rotate-45', '-translate-y-[7px]', 'w-full');
        }
    });
    
    // Close mobile menu when clicking links
    document.querySelectorAll('.mobile-link').forEach(link => {
        link.addEventListener('click', () => {
            isMenuOpen = false;
            mobileMenu.classList.add('opacity-0', 'invisible', '-translate-y-4');
            mobileMenu.classList.remove('opacity-100', 'visible', 'translate-y-0');
            
            document.getElementById('line1').classList.remove('rotate-45', 'translate-y-[7px]', 'w-full');
            document.getElementById('line2').classList.remove('opacity-0');
            document.getElementById('line3').classList.remove('-rotate-45', '-translate-y-[7px]', 'w-full');
        });
    });
    
    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
        if (!mobileMenu.contains(e.target) && !mobileMenuBtn.contains(e.target) && isMenuOpen) {
            isMenuOpen = false;
            mobileMenu.classList.add('opacity-0', 'invisible', '-translate-y-4');
            mobileMenu.classList.remove('opacity-100', 'visible', 'translate-y-0');
            
            document.getElementById('line1').classList.remove('rotate-45', 'translate-y-[7px]', 'w-full');
            document.getElementById('line2').classList.remove('opacity-0');
            document.getElementById('line3').classList.remove('-rotate-45', '-translate-y-[7px]', 'w-full');
        }
    });
    
    // Language dropdown functionality
    document.querySelectorAll('.group').forEach(group => {
        const button = group.querySelector('button');
        const dropdown = group.querySelector('.absolute');
        
        if (button && dropdown) {
            button.addEventListener('click', (e) => {
                e.stopPropagation();
                const isOpen = dropdown.classList.contains('opacity-100');
                
                // Close all other dropdowns
                document.querySelectorAll('.absolute.opacity-100').forEach(openDropdown => {
                    if (openDropdown !== dropdown) {
                        openDropdown.classList.remove('opacity-100', 'visible', 'scale-100');
                        openDropdown.classList.add('opacity-0', 'invisible', 'scale-95');
                    }
                });
                
                // Toggle current dropdown
                if (isOpen) {
                    dropdown.classList.remove('opacity-100', 'visible', 'scale-100');
                    dropdown.classList.add('opacity-0', 'invisible', 'scale-95');
                } else {
                    dropdown.classList.add('opacity-100', 'visible', 'scale-100');
                    dropdown.classList.remove('opacity-0', 'invisible', 'scale-95');
                }
            });
        }
    });
    
    // Close dropdowns when clicking outside
    document.addEventListener('click', (e) => {
        if (!e.target.closest('.group')) {
            document.querySelectorAll('.absolute.opacity-100').forEach(dropdown => {
                dropdown.classList.remove('opacity-100', 'visible', 'scale-100');
                dropdown.classList.add('opacity-0', 'invisible', 'scale-95');
            });
        }
    });
    
    // Navbar scroll effect
    let lastScroll = 0;
    window.addEventListener('scroll', () => {
        const currentScroll = window.pageYOffset;
        
        if (currentScroll > 100) {
            navbar.classList.add('py-2', 'bg-black/90');
            navbar.classList.remove('py-3', 'bg-black/80');
        } else {
            navbar.classList.add('py-3', 'bg-black/80');
            navbar.classList.remove('py-2', 'bg-black/90');
        }
        
        lastScroll = currentScroll;
    });
});
</script>

reutes/web.app <?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\ProjectController;
use App\Http\Controllers\ContactController;
use Livewire\Volt\Volt;

Route::get('/', function () {
    return view('welcome');
})->name('home');

Route::view('dashboard', 'dashboard')
    ->middleware(['auth', 'verified'])
    ->name('dashboard');

Route::middleware(['auth'])->group(function () {
    Route::redirect('settings', 'settings/profile');

    Volt::route('settings/profile', 'settings.profile')->name('settings.profile');
    Volt::route('settings/password', 'settings.password')->name('settings.password');
    Volt::route('settings/appearance', 'settings.appearance')->name('settings.appearance');
});

Route::redirect('/', '/en');

Route::prefix('{locale}')
    ->where(['locale' => 'en|ro'])
    ->group(function () {
        Route::get('/', fn () => view('home'))->name('home');
        Route::get('/projects', [ProjectController::class, 'index'])->name('projects');
        Route::get('/projects/{project}', [ProjectController::class, 'show'])->name('project');
        Route::get('/contact', fn () => view('contact'))->name('contact');
        Route::post('/contact', [ContactController::class, 'submit'])->name('contact.submit');
    });

    use App\Http\Controllers\BlogController;

// Blog routes
Route::prefix('blog')->group(function () {
    Route::get('/', [BlogController::class, 'index'])->name('blog.index');
    Route::get('/{slug}', [BlogController::class, 'show'])->name('blog.show');
    Route::get('/feed', [BlogController::class, 'feed'])->name('blog.feed');
    Route::get('/sitemap', [BlogController::class, 'sitemap'])->name('blog.sitemap');
});

require __DIR__.'/auth.php';

resurces.js import * as bootstrap from 'bootstrap';
import '@fortawesome/fontawesome-free/js/all.min';

// Initialize Bootstrap tooltips
document.addEventListener('DOMContentLoaded', () => {
  const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
  tooltipTriggerList.map(trigger => new bootstrap.Tooltip(trigger));
  
  // Parallax effect
  window.addEventListener('scroll', () => {
    const scrollY = window.scrollY;
    document.querySelectorAll('.parallax-layer').forEach(layer => {
      const depth = layer.dataset.depth || 1;
      const movement = -(scrollY * depth * 0.1);
      layer.style.transform = `translateY(${movement}px)`;
    });
  });
  
  // 3D hover effect for project cards
  document.querySelectorAll('.project-card').forEach(card => {
    card.addEventListener('mousemove', (e) => {
      const rect = card.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      
      const centerX = rect.width / 2;
      const centerY = rect.height / 2;
      
      const rotateY = (x - centerX) / 20;
      const rotateX = (centerY - y) / 20;
      
      card.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateZ(10px)`;
    });
    
    card.addEventListener('mouseleave', () => {
      card.style.transform = 'rotateX(0) rotateY(0) translateZ(0)';
    });
  });
});

// Mobile menu toggle
const mobileBtn = document.getElementById('mobile-menu-btn');
const mobileMenu = document.getElementById('mobile-menu');
mobileBtn.addEventListener('click', () => {
  mobileMenu.classList.toggle('max-h-0');
  mobileMenu.classList.toggle('max-h-screen');
  const icon = mobileBtn.querySelector('i');
  icon.classList.toggle('fa-bars');
  icon.classList.toggle('fa-times');
});

// Fade-in on scroll
const sections = document.querySelectorAll('.animate-fadeIn');
const observer = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    if (entry.isIntersecting) entry.target.classList.add('opacity-100');
  });
}, { threshold: 0.1 });

sections.forEach(section => {
  section.classList.add('opacity-0');
  observer.observe(section);
});
css : @import 'tailwindcss';

/* Bootstrap CSS */
@import 'bootstrap/dist/css/bootstrap.min.css';

/* Font Awesome */
@import '@fortawesome/fontawesome-free/css/all.min.css';

/* Tailwind și restul codului tău existent */
@import 'tailwindcss';
@import '../../vendor/livewire/flux/dist/flux.css';

/* ... restul codului tău CSS ... */
@source '../views';
@source '../../vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php';
@source '../../vendor/livewire/flux-pro/stubs/**/*.blade.php';
@source '../../vendor/livewire/flux/stubs/**/*.blade.php';

@custom-variant dark (&:where(.dark, .dark *));

@theme {
    --font-sans: 'Instrument Sans', ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';

    --color-zinc-50: #fafafa;
    --color-zinc-100: #f5f5f5;
    --color-zinc-200: #e5e5e5;
    --color-zinc-300: #d4d4d4;
    --color-zinc-400: #a3a3a3;
    --color-zinc-500: #737373;
    --color-zinc-600: #525252;
    --color-zinc-700: #404040;
    --color-zinc-800: #262626;
    --color-zinc-900: #171717;
    --color-zinc-950: #0a0a0a;

    --color-accent: var(--color-neutral-800);
    --color-accent-content: var(--color-neutral-800);
    --color-accent-foreground: var(--color-white);
}

@layer theme {
    .dark {
        --color-accent: var(--color-white);
        --color-accent-content: var(--color-white);
        --color-accent-foreground: var(--color-neutral-800);
    }
}

@layer base {

    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        border-color: var(--color-gray-200, currentColor);
    }
}

[data-flux-field]:not(ui-radio, ui-checkbox) {
    @apply grid gap-2;
}

[data-flux-label] {
    @apply  !mb-0 !leading-tight;
}

input:focus[data-flux-control],
textarea:focus[data-flux-control],
select:focus[data-flux-control] {
    @apply outline-hidden ring-2 ring-accent ring-offset-2 ring-offset-accent-foreground;
}

/* \[:where(&)\]:size-4 {
    @apply size-4;
} */

@media (max-width: 768px) {
  .hero {
    padding: 8rem 1rem;
  }
  
  .hero-content {
    max-width: 100%;
  }
  
  .avatar-section {
    flex-direction: column;
  }
  
  .avatar-container {
    width: 150px;
    height: 150px;
  }
  
  .navbar-brand {
    font-size: 1.2rem;
  }
  
  .nav-link {
    padding: 0.5rem 0.3rem;
    font-size: 0.9rem;
  }
  
  .btn {
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
  }
  
  .section-padding {
    padding: 4rem 1rem;
  }
  
  .card {
    margin-bottom: 1.5rem;
  }
  
  .card-body {
    padding: 1rem;
  }
  
  .social-icons {
    margin-top: 1rem;
  }
  
  .social-icon {
    width: 30px;
    height: 30px;
  }
  
  .footer-content {
    flex-direction: column;
  }
  
  .footer-section {
    margin-bottom: 2rem;
  }
}